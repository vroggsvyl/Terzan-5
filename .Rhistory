parameters <- c(1, 1, 1, 1, beta[[i]])
grid <- c(0,0)
changingBeta[i] <- (NLL(grid, parameters))
i <- i+1
}
par(mfrow = c(2,3))
plot(amplitude, changingA, type = "l", xlab = "Amplitude", ylab = "Negative Log Likelihood")
plot(x0, changingx0, type = "l", xlab = "x0", ylab = "Negative Log Likelihood")
plot(y0, changingy0, type = "l", xlab = "x0", ylab = "Negative Log Likelihood")
plot(alpha, changingAlpha, type = "l", xlab = "Alpha", ylab = "Negative Log Likelihood")
plot(beta, changingBeta, type = "l", xlab = "Beta", ylab = "Negative Log Likelihood")
Moffat2DPDF <- function(parameters, x, y){
x0 <- parameters[[1]]
y0 <- parameters[[2]]
alpha <- parameters[[3]]
beta <- parameters[[4]]
alpha <- pmax(alpha, 1e-6)
beta <- pmax(beta, 1 + 1e-6)
((beta-1)/(pi*alpha^2))*(1+((x - x0)^2 + (y - y0)^2)/alpha^2)^(-beta)
}
library(pracma)
#Test 1
T1Params <- c(x0 = 1, y0 = 4, alpha = 0.4, beta = 2)
MoffatIntegral2D1 <- integral2(Moffat2DPDF, xmin = -100, xmax = 100, ymin = -100, ymax = 100, parameters = T1Params)[[1]]
MoffatIntegral2D1
#Test 2
T2Params <- c(x0 = -3, y0 = 7, alpha = 1.2, beta = 1.3)
MoffatIntegral2D2 <- integral2(Moffat2DPDF, xmin = -100, xmax = 100, ymin = -100, ymax = 100, parameters = T2Params)[[1]]
MoffatIntegral2D2
#Test 3
T3Params <- c(x0 = 4, y0 = 0, alpha = 3, beta = 2.4)
MoffatIntegral2D3 <- integral2(Moffat2DPDF, xmin = -100, xmax = 100, ymin = -100, ymax = 100, parameters = T3Params)[[1]]
MoffatIntegral2D3
xRange <- seq(-20, 20, length = 200)
yRange <- seq(-20, 20, length = 200)
grid <- expand.grid(xRange, yRange)
A1 <- (T1Params[[4]]-1)/(pi * T1Params[[3]])
zT1 <- Moffat2D(grid, parameters = c(A1, T1Params))
zT1Matrix <- matrix(zT1, nrow = length(xRange), ncol = length(yRange))
image(xRange, yRange, zT1Matrix)
A2 <- (T2Params[[4]]-1)/(pi * T2Params[[3]])
zT2 <- Moffat2D(grid, parameters = c(A2, T2Params))
zT2Matrix <- matrix(zT2, nrow = length(xRange), ncol = length(yRange))
image(xRange, yRange, zT2Matrix)
A3 <- (T3Params[[4]]-1)/(pi * T3Params[[3]])
zT3 <- Moffat2D(grid, parameters = c(A3, T3Params))
zT3Matrix <- matrix(zT3, nrow = length(xRange), ncol = length(yRange))
image(xRange, yRange, zT3Matrix)
NLL2D <- function(parameters, x, y){
predictedDens <- Moffat2DPDF(parameters, x, y)
return(-sum(log(predictedDens)))
}
deriv2DNLL <- function(parameters, x, y){
x0 <- parameters[[1]]
y0 <- parameters[[2]]
alpha <- parameters[[3]]
beta <- parameters[[4]]
dx0 <- -sum((2*beta*(x-x0))/(alpha^2 + (x-x0)^2 + (y-y0)^2))
dy0 <- -sum((2*beta*(y-y0))/(alpha^2 + (x-x0)^2 + (y-y0)^2))
dAlpha <- 2*sum(1/alpha + (beta*((x-x0)^2 + (y-y0)^2))/(alpha^3 + alpha*((x-x0)^2 + (y-y0)^2)))
dBeta <- -sum(1/beta - log(1+((x-x0)^2 + (y-y0)^2)/alpha^2))
return(c(dx0, dy0, dAlpha, dBeta))
}
mean(POI1$x)
mean(POI1$y)
initGuess <- c(x0 = mean(POI1$x), y0 = mean(POI1$y), alpha = 1, beta = 2)
lowerBounds <- c(0, 0, 1e-6, 1+1e-6)
resultPOI1 <- optim(par = initGuess, fn = NLL2D, gr = deriv2DNLL, x = POI1$x, y = POI1$y, method = "L-BFGS-B", lower = lowerBounds)
resultPOI1
optimPOI1Par <- resultPOI1$par
optimPOI1Par
xRange <- seq(4160, 4180, length = 100)
yRange <- seq(4180, 4200, length = 100)
grid <- expand.grid(x = xRange, y = yRange)
amplitude <- (optimPOI1Par[[4]]-1)/(pi*optimPOI1Par[[3]]^2)
parameters <- c(amplitude, optimPOI1Par)
zPOI1<- Moffat2D(grid, parameters)
zPOI1Matrix <- matrix(zPOI1, nrow = length(xRange), ncol = length(yRange))
par(pty = "s")
image(xRange, yRange, zPOI1Matrix, xlab = "x", ylab = "y", main = "2D Moffat")
model <- ggplot(POI1, aes(x,y)) +
geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") +
scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(10, 100, 1000)) +
coord_fixed()
contours <- ggplot(grid, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI1), bins = 10) +
coord_fixed()
ggMarginal(model, type = "histogram")
contours
contourData <- ggplot_build(contours)$data[[1]] #extracting the contours (from the optimised function)
combined <- model + geom_path(data = contourData, aes(x = x, y = y, group = group), color = "red", alpha = 0.5)
combined
library(ggExtra)
#refiltering the POI1
POI1ZOOM <- POI1 %>%
filter(x>4167 & x<4177 & y>4183 & y<4193)
#creating a point density plot
modelZoomedInPOI1 <- ggplot(POI1ZOOM, aes(x,y)) +
geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") +
scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(10, 100, 1000)) +
coord_fixed()
contourData <- ggplot_build(contours)$data[[1]]
#combining the contour plot and the point density plot
combined <- modelZoomedInPOI1 + geom_path(data = contourData, aes(x = x, y = y, group = group), color = cbPalette[5], alpha = 1, linewidth= 0.3)
#viewing
ggMarginal(combined, type = "histogram")
#plotting contours on the raw data
ggplot(POI1ZOOM, aes(x,y)) +
geom_point(size = 0.2) +
geom_path(data = contourData, aes(x = x, y = y, group = group), color = cbPalette[2], alpha = 1) +
coord_fixed()
mean(POI2$x)
mean(POI2$y)
initGuess <- c(x0 = 4115.227, y0 = 4052.706, alpha = 1, beta = 2)
result2D <- optim(par = initGuess, fn = NLL2D, gr = deriv2DNLL, x = POI2$x, y = POI2$y, method = "L-BFGS-B", lower = lowerBounds)
result2D
optimPOI2Par <- result2D$par
optimPOI2Par
xRange <- seq(4110, 4120, length = 100)
yRange <- seq(4045, 4055, length = 100)
grid <- expand.grid(x = xRange, y = yRange)
amplitude <- (optimPOI2Par[[4]]-1)/(pi*optimPOI2Par[[3]]^2)
parameters <- c(amplitude, optimPOI2Par)
zPOI2<- Moffat2D(grid, parameters)
zPOI2Matrix <- matrix(zPOI2, nrow = length(xRange), ncol = length(yRange))
par(pty = "s")
image(xRange, yRange, zPOI2Matrix, xlab = "x", ylab = "y", main = "2D Moffat")
xRange <- seq(4110, 4120, length = 100)
yRange <- seq(4045, 4055, length = 100)
data <- expand.grid(x = xRange, y = yRange)
model <- ggplot(POI2, aes(x,y)) +
geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") +
scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(10, 100, 1000)) +
coord_fixed()
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
ggMarginal(model, type = "histogram")
contours
xRange <- seq(4110, 4120, length = 100)
yRange <- seq(4045, 4055, length = 100)
data <- expand.grid(x = xRange, y = yRange)
integrate(MOFFAT2D, lower = min(yRange), upper = min(yRange), grid = data, parameters = parameters)
Moffat2D <- function(grid, parameters){
x <- grid[[1]]
y <- grid[[2]]
amplitude <- parameters[[1]]
x0 <- parameters[[2]]
y0 <- parameters[[3]]
alpha <- parameters[[4]]
beta <- parameters[[5]]
amplitude*(1+((x - x0)^2 + (y - y0)^2)/alpha^2)^(-beta)
}
#grid of variables
xRange <- seq(-5, 5, length = 100)
yRange <- seq(-5, 5, length = 100)
grid <- expand.grid(x = xRange, y = yRange)
#Dummy parameters
dummyParams <- c(amplitude = 1, x0 = 0, y0 = 0, alpha = 1, beta = 1)
z <- Moffat2D(grid, dummyParams)
zMatrix <- matrix(z, nrow = length(xRange), ncol = length(yRange))
image(xRange, yRange, zMatrix, xlab = "x", ylab = "y", main = "2D Moffat")
persp(xRange, yRange, zMatrix, xlab = "x", ylab = "y", zlab = "f(x,y)", main = "2D Moffat")
xRange <- seq(4110, 4120, length = 100)
yRange <- seq(4045, 4055, length = 100)
data <- expand.grid(x = xRange, y = yRange)
integrate(MOFFAT2D, lower = min(yRange), upper = min(yRange), grid = data, parameters = parameters)
xRange <- seq(4110, 4120, length = 100)
yRange <- seq(4045, 4055, length = 100)
data <- expand.grid(x = xRange, y = yRange)
integrate(Moffat2D, lower = min(yRange), upper = min(yRange), grid = data, parameters = parameters)
View(Moffat2D)
xRange <- seq(4110, 4120, length = 100)
yRange <- seq(4045, 4055, length = 100)
data <- expand.grid(x = xRange, y = yRange)
parameters <- c(amplitude, optimPOI2Par)
integrate(Moffat2D, lower = min(yRange), upper = min(yRange), grid = data, parameters = parameters)
outer(xRange, yRange, Moffat2DPDF)
outer(x = xRange, y =  yRange, Moffat2DPDF)
outer(X = xRange, Y = yRange, Moffat2DPDF)
outer(X = xRange, Y = yRange, Moffat2DPDF, grid = data)
outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = parameters)
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = parameters)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(marginalX)
plot(marginalY)
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = parameters)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX)
plot(yRange, marginalY)
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX)
plot(yRange, marginalY)
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
contours
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
contours
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
ggMarginal(contours, type = "density")
contours
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
marginals <- ggplot(data)
ggMarginalGadget(data)
contours
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
marginals <- ggplot(data)
ggMarginalGadget(marginals)
contours
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
marginals <- ggplot(data)
ggMarginalGadget(marginals)
contours
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
marginals <- ggplot(data)
contours
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
marginals <- ggplot(data)
marginals
contours
data <- expand.grid(x = xRange, y = yRange)
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
marginals <- ggplot(data)
marginals
data <- expand.grid(x = xRange, y = yRange)
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
ggMarginal(contours, type = "density", margins = "both")
data <- expand.grid(x = xRange, y = yRange)
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
ggMarginal(model)
data <- expand.grid(x = xRange, y = yRange)
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
model + geom_line(data = data.frame(x = marginalX, y = marginal_x$y), aes(x, y * max(data$y) / max(marginal_x$y)), color = "blue"))
data <- expand.grid(x = xRange, y = yRange)
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
model + geom_line(data = data.frame(x = marginalX, y = marginal_x$y), aes(x, y * max(data$y) / max(marginal_x$y)), color = "blue")
data <- expand.grid(x = xRange, y = yRange)
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
model + geom_line(data = data.frame(x = marginalX, y = marginalX$y), aes(x, y * max(data$y) / max(marginalX$y)), color = "blue")
data <- expand.grid(x = xRange, y = yRange)
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
model + geom_line(data = marginalX, aes(x, y * max(data$y) / max(marginalX)), color = "blue")
data <- expand.grid(x = xRange, y = yRange)
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
model + geom_line(data = data.frame(xRaneg, marginalX), aes(x, y * max(data$y) / max(marginalX)), color = "blue")
data <- expand.grid(x = xRange, y = yRange)
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
model + geom_line(data = data.frame(xRange, marginalX), aes(x, y * max(data$y) / max(marginalX)), color = "blue")
data <- expand.grid(x = xRange, y = yRange)
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
model + geom_line(data = data.frame(xRange, marginalX))
data <- expand.grid(x = xRange, y = yRange)
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
model + geom_line(data = data.frame(xRange, marginalX)) +
scale_x_continuous(sec.axis = dup_axis(labels = NULL)) +
scale_y_continuous(sec.axis = dup_axis(labels = NULL)) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
data <- expand.grid(x = xRange, y = yRange)
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
model2 <- model + geom_line(data = data.frame(xRange, marginalX)) +
scale_x_continuous(sec.axis = dup_axis(labels = NULL)) +
scale_y_continuous(sec.axis = dup_axis(labels = NULL)) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
model2
data <- expand.grid(x = xRange, y = yRange)
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
model2 <- model + geom_line(x = xRange, y = marginalX) +
scale_x_continuous(sec.axis = dup_axis(labels = NULL)) +
scale_y_continuous(sec.axis = dup_axis(labels = NULL)) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
model2
data <- expand.grid(x = xRange, y = yRange)
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
library(cowplot)
finalPlot <- plot_grid(MarginalY, combined, MarginalX)
library(cowplot)
finalPlot <- plot_grid(marginalY, combined, marginalX)
data <- expand.grid(x = xRange, y = yRange)
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
mX <- plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
mY <- plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
data <- expand.grid(x = xRange, y = yRange)
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
mX <- plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
mY <- plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
library(cowplot)
finalPlot <- plot_grid(mY, combined, mX)
library(cowplot)
finalPlot <- plot_grid(mY, combined, mX)
finalPlot
data <- expand.grid(x = xRange, y = yRange)
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
mX <- plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
mY <- plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
mX
mY
data <- expand.grid(x = xRange, y = yRange)
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
marginalX
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
# plotMarginalX <- ggplot()
data <- expand.grid(x = xRange, y = yRange)
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
marginalX
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
plotMarginalX <- ggplot(data) +
geom_density(x = xRange, y = marginalX)
data <- expand.grid(x = xRange, y = yRange)
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
plotMarginalX <- ggplot(data) +
geom_density(x = xRange, y = marginalX)
plotMarginalX
data <- expand.grid(x = xRange, y = yRange)
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
plotMarginalX <- ggplot(data, aes(x = x, y = y)) +
geom_density(x = xRange, y = marginalX)
plotMarginalX
data <- expand.grid(x = xRange, y = yRange)
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
data <- expand.grid(x = xRange, y = yRange)
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
