marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
contours
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
ggMarginal(contours, type = "density")
contours
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
marginals <- ggplot(data)
ggMarginalGadget(data)
contours
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
marginals <- ggplot(data)
ggMarginalGadget(marginals)
contours
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
marginals <- ggplot(data)
ggMarginalGadget(marginals)
contours
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
marginals <- ggplot(data)
contours
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
marginals <- ggplot(data)
marginals
contours
data <- expand.grid(x = xRange, y = yRange)
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
marginals <- ggplot(data)
marginals
data <- expand.grid(x = xRange, y = yRange)
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
ggMarginal(contours, type = "density", margins = "both")
data <- expand.grid(x = xRange, y = yRange)
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
ggMarginal(model)
data <- expand.grid(x = xRange, y = yRange)
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
model + geom_line(data = data.frame(x = marginalX, y = marginal_x$y), aes(x, y * max(data$y) / max(marginal_x$y)), color = "blue"))
data <- expand.grid(x = xRange, y = yRange)
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
model + geom_line(data = data.frame(x = marginalX, y = marginal_x$y), aes(x, y * max(data$y) / max(marginal_x$y)), color = "blue")
data <- expand.grid(x = xRange, y = yRange)
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
model + geom_line(data = data.frame(x = marginalX, y = marginalX$y), aes(x, y * max(data$y) / max(marginalX$y)), color = "blue")
data <- expand.grid(x = xRange, y = yRange)
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
model + geom_line(data = marginalX, aes(x, y * max(data$y) / max(marginalX)), color = "blue")
data <- expand.grid(x = xRange, y = yRange)
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
model + geom_line(data = data.frame(xRaneg, marginalX), aes(x, y * max(data$y) / max(marginalX)), color = "blue")
data <- expand.grid(x = xRange, y = yRange)
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
model + geom_line(data = data.frame(xRange, marginalX), aes(x, y * max(data$y) / max(marginalX)), color = "blue")
data <- expand.grid(x = xRange, y = yRange)
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
model + geom_line(data = data.frame(xRange, marginalX))
data <- expand.grid(x = xRange, y = yRange)
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
model + geom_line(data = data.frame(xRange, marginalX)) +
scale_x_continuous(sec.axis = dup_axis(labels = NULL)) +
scale_y_continuous(sec.axis = dup_axis(labels = NULL)) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
data <- expand.grid(x = xRange, y = yRange)
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
model2 <- model + geom_line(data = data.frame(xRange, marginalX)) +
scale_x_continuous(sec.axis = dup_axis(labels = NULL)) +
scale_y_continuous(sec.axis = dup_axis(labels = NULL)) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
model2
data <- expand.grid(x = xRange, y = yRange)
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
model2 <- model + geom_line(x = xRange, y = marginalX) +
scale_x_continuous(sec.axis = dup_axis(labels = NULL)) +
scale_y_continuous(sec.axis = dup_axis(labels = NULL)) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
model2
data <- expand.grid(x = xRange, y = yRange)
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
library(cowplot)
finalPlot <- plot_grid(MarginalY, combined, MarginalX)
library(cowplot)
finalPlot <- plot_grid(marginalY, combined, marginalX)
data <- expand.grid(x = xRange, y = yRange)
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
mX <- plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
mY <- plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
data <- expand.grid(x = xRange, y = yRange)
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
mX <- plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
mY <- plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
library(cowplot)
finalPlot <- plot_grid(mY, combined, mX)
library(cowplot)
finalPlot <- plot_grid(mY, combined, mX)
finalPlot
data <- expand.grid(x = xRange, y = yRange)
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
mX <- plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
mY <- plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
mX
mY
data <- expand.grid(x = xRange, y = yRange)
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
marginalX
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
# plotMarginalX <- ggplot()
data <- expand.grid(x = xRange, y = yRange)
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
marginalX
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
plotMarginalX <- ggplot(data) +
geom_density(x = xRange, y = marginalX)
data <- expand.grid(x = xRange, y = yRange)
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
plotMarginalX <- ggplot(data) +
geom_density(x = xRange, y = marginalX)
plotMarginalX
data <- expand.grid(x = xRange, y = yRange)
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
plotMarginalX <- ggplot(data, aes(x = x, y = y)) +
geom_density(x = xRange, y = marginalX)
plotMarginalX
data <- expand.grid(x = xRange, y = yRange)
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10) +
coord_fixed()
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
data <- expand.grid(x = xRange, y = yRange)
jointPDFValues <- outer(X = xRange, Y = yRange, Moffat2DPDF, parameters = optimPOI2Par)
marginalX <- apply(jointPDFValues, 1, sum)
marginalY <- apply(jointPDFValues, 2, sum)
plot(xRange, marginalX, type = "l", xlab = "x", ylab = "Density", main = "Marginal PDF of x")
plot(yRange, marginalY, type = "l", xlab = "y", ylab = "Density", main = "Marginal PDF of y")
knitr::opts_chunk$set(echo = TRUE)
ks.test(x = noTiesL2, y = MOFFATCDF)
xRange <- seq(4105, 4125, length = 100)
MCDF <- function(xRange, pdf){
aa <- numeric(length = length(xRange))
for(i in 1:100){
aa[i] <- integrate(pdf, lower = xRange[1], upper = xRange[i], parameters = optimPAR2)$value
}
return(aa)
}
MCDF(xRange = xRange, pdf = MOFFATPDF)
ks.test(x = noTiesL2, y = MCDF, pdf = MOFFATPDF)
plot(ecdf(noTiesL2), main = "KS Test - Normal Distribution", ylab = "Probability")
curve(pnorm(x, mean = 4115.19535, sd = 1.20138), add = TRUE, col = 4)
CDF <- cbind(xRange, MOFFATCDF)
plot(ecdf(noTiesL2), main = "KS Test - Moffat Distribution", ylab = "Probability", col = rgb(0,0,1, alpha = 0.1))
lines(CDF[,1], CDF[,2], type = "l", col = cbPalette[7], lwd = 2)
xRange <- seq(4105, 4125, length = 100)
MCDF <- function(xRange, pdf){
mcdf <- numeric(length = length(xRange))
for(i in 1:100){
mcdf[i] <- integrate(pdf, lower = xRange[1], upper = xRange[i], parameters = optimPAR2)$value
}
return(mcdf)
}
MCDF(xRange = xRange, pdf = MOFFATPDF)
CDF <- cbind(xRange, MOFFATCDF)
plot(ecdf(noTiesL2), main = "KS Test - Moffat Distribution", ylab = "Probability", col = rgb(0,0,1, alpha = 0.1))
lines(CDF[,1], CDF[,2], type = "l", col = cbPalette[7], lwd = 2)
n <- length(noTiesL2)
sampSorted <- sort(noTiesL2)
Ui <- MCDF(sampSorted, MOFFATPDF)
Dn_plus <- (1:n) / n - Ui
Dn_minus <- Ui - (1:n - 1) / n
i_plus <- which.max(Dn_plus)
i_minus <- which.max(Dn_minus)
lines(rep(sampSorted[i_plus], 2),
c(i_plus / n, MCDF(sampSorted[i_plus], pdf = MOFFATPDF)),
col = 3, lwd = 2, pch = 16, type = "o", cex = 0.75)
CDF <- cbind(xRange, MOFFATCDF)
plot(ecdf(noTiesL2), main = "KS Test - Moffat Distribution", ylab = "Probability", col = rgb(0,0,1, alpha = 0.1))
lines(CDF[,1], CDF[,2], type = "l", col = cbPalette[7], lwd = 2)
mks <- ks.test(x = noTiesL2, y = MCDF, pdf = MOFFATPDF)
mks
str(mks)
install.packages("dgof")
library(dgof)
dgof::ks.test(x = noTiesL2, y = MCDF, pdf = MOFFATPDF)
detach("package:dgof", unload = TRUE)
MCDF(xRange = noTiesL2, pdf = MOFFATPDF)
xRange <- seq(4105, 4125, length = 100)
MCDF <- function(xRange, pdf){
mcdf <- numeric(length = length(xRange))
for(i in 1:100){
mcdf[i] <- integrate(pdf, lower = min(xRange), upper = xRange[i], parameters = optimPAR2)$value
}
return(mcdf)
}
MCDF(xRange = xRange, pdf = MOFFATPDF)
xRange <- seq(4105, 4125, length = 100)
MCDF <- function(xRange, pdf){
mcdf <- numeric(length = length(xRange))
for(i in 1:100){
mcdf[i] <- integrate(pdf, lower = xRange[i], upper = xRange[i], parameters = optimPAR2)$value
}
return(mcdf)
}
MCDF(xRange = xRange, pdf = MOFFATPDF)
xRange <- seq(4105, 4125, length = 100)
MCDF <- function(xRange, pdf){
mcdf <- numeric(length = length(xRange))
for(i in 1:100){
mcdf[i] <- integrate(pdf, lower = xRange[1], upper = xRange[i], parameters = optimPAR2)$value
}
return(mcdf)
}
MCDF(xRange = xRange, pdf = MOFFATPDF)
sortNTL2 <- sort(noTiesL2)
MCDF(xRange = sortNTL2, pdf = MOFFATPDF)
sortNTL2 <- sort(noTiesL2)
sortNTL2
#MCDF(xRange = sortNTL2, pdf = MOFFATPDF)
xRange <- seq(4105, 4125, length = 100)
MCDF <- function(xRange, pdf){
mcdf <- numeric(length = length(xRange))
for(i in 1:length(xRange)){
mcdf[i] <- integrate(pdf, lower = xRange[1], upper = xRange[i], parameters = optimPAR2)$value
}
return(mcdf)
}
MCDF(xRange = xRange, pdf = MOFFATPDF)
sortNTL2 <- sort(noTiesL2)
#sortNTL2
MCDF(xRange = sortNTL2, pdf = MOFFATPDF)
mks <- ks.test(x = sortNTL2, y = MCDF, pdf = MOFFATPDF)
mks
str(mks)
plot(ecdf(noTiesL2), main = "KS Test - Normal Distribution", ylab = "Probability")
curve(pnorm(x, mean = 4115.19535, sd = 1.20138), add = TRUE, col = 4)
lines(CDF[,1], CDF[,2], type = "l", col = cbPalette[7], lwd = 2)
plot(ecdf(noTiesL2), main = "KS Test", ylab = "Probability", col = cbPalette[2])
curve(pnorm(x, mean = 4115.19535, sd = 1.20138), add = TRUE, col = 4)
lines(CDF[,1], CDF[,2], type = "l", col = cbPalette[7], lwd = 2)
plot(ecdf(noTiesL2), main = "KS Test", ylab = "Probability", col = cbPalette[3])
curve(pnorm(x, mean = 4115.19535, sd = 1.20138), add = TRUE, col = 4)
lines(CDF[,1], CDF[,2], type = "l", col = cbPalette[7], lwd = 2)
plot(ecdf(noTiesL2), main = "KS Test", ylab = "Probability", col = cbPalette[4])
curve(pnorm(x, mean = 4115.19535, sd = 1.20138), add = TRUE, col = 4)
lines(CDF[,1], CDF[,2], type = "l", col = cbPalette[7], lwd = 2)
plot(ecdf(noTiesL2), main = "KS Test", ylab = "Probability", col = cbPalette[1])
curve(pnorm(x, mean = 4115.19535, sd = 1.20138), add = TRUE, col = 4)
lines(CDF[,1], CDF[,2], type = "l", col = cbPalette[7], lwd = 2)
plot(ecdf(noTiesL2), main = "KS Test", ylab = "Probability", col = cbPalette[4])
curve(pnorm(x, mean = 4115.19535, sd = 1.20138), add = TRUE, col = 4)
lines(CDF[,1], CDF[,2], type = "l", col = cbPalette[7], lwd = 2)
plot(ecdf(noTiesL2), main = "KS Test", ylab = "Probability", col = cbPalette[5])
curve(pnorm(x, mean = 4115.19535, sd = 1.20138), add = TRUE, col = 4)
lines(CDF[,1], CDF[,2], type = "l", col = cbPalette[7], lwd = 2)
plot(ecdf(noTiesL2), main = "KS Test", ylab = "Probability", col = cbPalette[5], alpha = 0.1)
curve(pnorm(x, mean = 4115.19535, sd = 1.20138), add = TRUE, col = 4)
lines(CDF[,1], CDF[,2], type = "l", col = cbPalette[7], lwd = 2)
plot(ecdf(noTiesL2), main = "KS Test", ylab = "Probability", col = cbPalette[5])
curve(pnorm(x, mean = 4115.19535, sd = 1.20138), add = TRUE, col = cbPalette[4], lwd = 2)
lines(CDF[,1], CDF[,2], type = "l", col = cbPalette[7], lwd = 2)
plot(ecdf(noTiesL2), main = "KS Test", ylab = "Probability", col = cbPalette[5])
curve(pnorm(x, mean = 4115.19535, sd = 1.20138), add = TRUE, col = cbPalette[2], lwd = 2)
lines(CDF[,1], CDF[,2], type = "l", col = cbPalette[3], lwd = 2)
plot(ecdf(noTiesL2), main = "KS Test", ylab = "Probability", col = cbPalette[1])
curve(pnorm(x, mean = 4115.19535, sd = 1.20138), add = TRUE, col = cbPalette[2], lwd = 2)
lines(CDF[,1], CDF[,2], type = "l", col = cbPalette[3], lwd = 2)
plot(ecdf(noTiesL2), main = "KS Test", ylab = "Probability", col = cbPalette[5])
curve(pnorm(x, mean = 4115.19535, sd = 1.20138), add = TRUE, col = cbPalette[2], lwd = 2)
lines(CDF[,1], CDF[,2], type = "l", col = cbPalette[3], lwd = 2)
plot(ecdf(noTiesL2), main = "KS Test", ylab = "Probability", col = cbPalette[5])
curve(pnorm(x, mean = 4115.19535, sd = 1.20138), add = TRUE, col = cbPalette[3], lwd = 2)
lines(CDF[,1], CDF[,2], type = "l", col = cbPalette[2], lwd = 2)
ggplot(ecdf(noTiesL2))
library(ggplot2)
ggplot(ecdf(noTiesL2))
ecdfNTL2 <- ecdf(noTiesL2)
ggplot(ecdfNTL2)
ecdfNTL2 <- ecdf(noTiesL2)
ggplot(data = ecdfNTL2)
plot(ecdf(noTiesL2), main = "KS Test", ylab = "Probability", col = cbPalette[5])
curve(pnorm(x, mean = 4115.19535, sd = 1.20138), add = TRUE, col = cbPalette[3], lwd = 2)
lines(CDF[,1], CDF[,2], type = "l", col = cbPalette[2], lwd = 2)
legend()
plot(ecdf(noTiesL2), main = "KS Test", ylab = "Probability", col = cbPalette[5])
curve(pnorm(x, mean = 4115.19535, sd = 1.20138), add = TRUE, col = cbPalette[3], lwd = 2)
lines(CDF[,1], CDF[,2], type = "l", col = cbPalette[2], lwd = 2)
legend(legend = c("normal distribution", "1D moffat distribution"))
plot(ecdf(noTiesL2), main = "KS Test", ylab = "Probability", col = cbPalette[5])
curve(pnorm(x, mean = 4115.19535, sd = 1.20138), add = TRUE, col = cbPalette[3], lwd = 2)
lines(CDF[,1], CDF[,2], type = "l", col = cbPalette[2], lwd = 2)
legend("bottomright", legend = c("normal distribution", "1D moffat distribution"))
plot(ecdf(noTiesL2), main = "KS Test", ylab = "Probability", col = cbPalette[5])
curve(pnorm(x, mean = 4115.19535, sd = 1.20138), add = TRUE, col = cbPalette[3], lwd = 2)
lines(CDF[,1], CDF[,2], type = "l", col = cbPalette[2], lwd = 2)
legend("bottomright", legend = c("ECDF", "normal distribution", "1D moffat distribution"), col = cbPalette[c(5,3,2)], lty = c(1,1,1), lwd = c(1,2,2))
noTiesL2 <- unique(xl2)
ks.test(x = noTiesL2, y = "pnorm")
noTiesL2 <- unique(xl2)
ks.test(x = sortNTL2, y = "pnorm")
noTiesL2 <- unique(xl2)
ks.test(x = noTiesL2, y = "pnorm")
ks.test(x = sortNTL2, y = MCDF, pdf = MOFFATPDF)
plot(ecdf(noTiesL2), main = "KS Test", ylab = "Probability", col = cbPalette[5])
curve(pnorm(x, mean = 4115.19535, sd = 1.20138), add = TRUE, col = cbPalette[3], lwd = 2)
lines(CDF[,1], CDF[,2], type = "l", col = cbPalette[2], lwd = 2)
legend("bottomright", legend = c("ECDF", "normal distribution - D = 1", "1D moffat distribution - D = 0.0366"), col = cbPalette[c(5,3,2)], lty = c(1,1,1), lwd = c(1,2,2))
plot(ecdf(noTiesL2), main = "KS Test", ylab = "Probability", col = cbPalette[5])
curve(pnorm(x, mean = 4115.19535, sd = 1.20138), add = TRUE, col = cbPalette[3], lwd = 2)
lines(CDF[,1], CDF[,2], type = "l", col = cbPalette[2], lwd = 2)
legend("topleft", legend = c("ECDF", "normal distribution - D = 1", "1D moffat distribution - D = 0.0366"), col = cbPalette[c(5,3,2)], lty = c(1,1,1), lwd = c(1,2,2))
plot(ecdf(noTiesL2), main = "KS Test", ylab = "Probability", col = cbPalette[5])
curve(pnorm(x, mean = 4115.19535, sd = 1.20138), add = TRUE, col = cbPalette[3], lwd = 2)
lines(CDF[,1], CDF[,2], type = "l", col = cbPalette[2], lwd = 2)
legend("bottomright", legend = c("ECDF", "normal distribution - D = 1", "1D moffat distribution - D = 0.0366"), col = cbPalette[c(5,3,2)], lty = c(1,1,1), lwd = c(1,2,2))
plot(ecdf(noTiesL2), main = "KS Test", ylab = "Probability", col = cbPalette[5])
curve(pnorm(x, mean = 4115.19535, sd = 1.20138), add = TRUE, col = cbPalette[3], lwd = 2)
lines(CDF[,1], CDF[,2], type = "l", col = cbPalette[2], lwd = 2)
legend("bottomright", legend = c("ECDF", "normal dist - D = 1", "1D moffat dist - D = 0.0366"), col = cbPalette[c(5,3,2)], lty = c(1,1,1), lwd = c(1,2,2))
plot(ecdf(noTiesL2), main = "KS Test", ylab = "Probability", col = cbPalette[5])
curve(pnorm(x, mean = 4115.19535, sd = 1.20138), add = TRUE, col = cbPalette[3], lwd = 2)
lines(CDF[,1], CDF[,2], type = "l", col = cbPalette[2], lwd = 2)
legend("bottomright", legend = c("ECDF", "Normal Dist - D = 1", "1D Moffat Dist - D = 0.0366"), col = cbPalette[c(5,3,2)], lty = c(1,1,1), lwd = c(1,2,2))
plot(ecdf(noTiesL2), main = "KS Test", ylab = "Probability", col = cbPalette[5])
curve(pnorm(x, mean = 4115.19535, sd = 1.20138), add = TRUE, col = cbPalette[3], lwd = 2)
lines(CDF[,1], CDF[,2], type = "l", col = cbPalette[2], lwd = 2)
legend("bottomright", legend = c("ECDF", "Normal Dist  D = 1", "1D Moffat Dist  D = 0.0366"), col = cbPalette[c(5,3,2)], lty = c(1,1,1), lwd = c(1,2,2))
xRange <- seq(4105, 4125, length = 100)
MCDF <- function(xRange, pdf){
n <- length(xRange)
mcdf <- numeric(length = n)
for(i in 1:n){
mcdf[i] <- integrate(pdf, lower = xRange[1], upper = xRange[i], parameters = optimPAR2)$value
}
return(mcdf)
}
MCDF(xRange = xRange, pdf = MOFFATPDF)
#ordering the data
sortNTL2 <- sort(noTiesL2)
#sortNTL2
#MCDF(xRange = sortNTL2, pdf = MOFFATPDF)
ks.test(x = sortNTL2, y = MCDF, pdf = MOFFATPDF)
