y0 <- parameters[[2]]
alpha <- parameters[[3]]
beta <- parameters[[4]]
((beta-1)/(pi*alpha^2))*(1+((x - x0)^2 + (y - y0)^2)/alpha^2)^(-beta)
}
NLL2D <- function(parameters, x, y){
predictedDens <- Moffat2DPDF(parameters, x, y)
return(-sum(log(predictedDens)))
}
deriv2DNLL <- function(parameters, x, y){
x0 <- parameters[[1]]
y0 <- parameters[[2]]
alpha <- parameters[[3]]
beta <- parameters[[4]]
dx0 <- -sum((2*beta*(x-x0))/(alpha^2 + (x-x0)^2 + (y-y0)^2))
dy0 <- -sum((2*beta*(y-y0))/(alpha^2 + (x-x0)^2 + (y-y0)^2))
dAlpha <- 2*sum(1/alpha + (beta*((x-x0)^2 + (y-y0)^2))/(alpha^3 + alpha*((x-x0)^2 + (y-y0)^2)))
dBeta <- -sum(1/beta - log(1+((x-x0)^2 + (y-y0)^2)/alpha^2))
return(c(dx0, dy0, dAlpha, dBeta))
}
xRange <- seq(4110, 4120, length = 100)
yRange <- seq(4045, 4055, length = 100)
grid <- expand.grid(x = xRange, y = yRange)
amplitude <- (1.9175-1)/(pi*0.6863^2)
parameters <- c(amplitude, optimPOI2Par)
zPOI2<- Moffat2D(grid, parameters)
zPOI2Matrix <- matrix(zPOI2, nrow = length(xRange), ncol = length(yRange))
image(xRange, yRange, zPOI2Matrix, xlab = "x", ylab = "y", main = "2D Moffat")
persp(xRange, yRange, zPOI2Matrix, xlab = "x", ylab = "y", main = "2D Moffat")
ggplot(POI2, aes(x,y)) +
geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") +
scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(10, 100, 1000)) +
coord_fixed()
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(plotly)
library(readr)
library(ggpointdensity)
library(viridis)
library(tidyr)
library(fitdistrplus)
## Color pallete
cbPalette <- c("#56B4E9", "#E69F00", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
ggplot(POI2, aes(x,y)) +
geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") +
scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(10, 100, 1000)) +
coord_fixed()
ggplot(line2) +
# geom_histogram(aes(x, y = after_stat(density), colour = "data"), bins = 50, fill=cbPalette[5]) +
# stat_function(fun = gaussian_density, args = list(parameters = optimized_parameters), n=1000, aes(colour="gaussian density"), linewidth=1.2) +
# stat_function(fun=MOFFATPDF,args = list(parameters = optimPAR2), n=1000, aes(colour="Moffat PDF"), linewidth=1.2) +
# ylab("p(x)") +
# scale_colour_manual("Legend", values = cbPalette)
ggplot(line2)
# geom_histogram(aes(x, y = after_stat(density), colour = "data"), bins = 50, fill=cbPalette[5]) +
# stat_function(fun = gaussian_density, args = list(parameters = optimized_parameters), n=1000, aes(colour="gaussian density"), linewidth=1.2) +
# stat_function(fun=MOFFATPDF,args = list(parameters = optimPAR2), n=1000, aes(colour="Moffat PDF"), linewidth=1.2) +
# ylab("p(x)") +
# scale_colour_manual("Legend", values = cbPalette)
ggplot(line2) +
geom_histogram(aes(x, y = after_stat(density), colour = "data"), bins = 50, fill=cbPalette[5]) +
stat_function(fun = gaussian_density, args = list(parameters = optimized_parameters), n=1000, aes(colour="gaussian density"), linewidth=1.2) +
stat_function(fun=MOFFATPDF,args = list(parameters = optimPAR2), n=1000, aes(colour="Moffat PDF"), linewidth=1.2) +
ylab("p(x)") +
scale_colour_manual("Legend", values = cbPalette)
ggplot(POI2) +
geom_histogram(aes(x, y, z = after_stat(density), colour = "data"), bins = 100, fill = cbPalette[5])
ggplot(POI2) +
geom_histogram(aes(x, y, colour = "data"), bins = 100, fill = cbPalette[5])
initGuess <- c(x0 = 4115, y0 = 4060, alpha = 1, beta = 2)
lowerBounds <- c(0, 0, 1e-6, 1+1e-6)
result2D <- optim(par = initGuess, fn = NLL2D, gr = deriv2DNLL, x = POI2$x, y = POI2$y, method = "L-BFGS-B", lower = lowerBounds)
optimPOI2Par <- result2D$par
optimPOI2Par
initGuess <- c(x0 = 4115, y0 = 4051, alpha = 1, beta = 2)
lowerBounds <- c(0, 0, 1e-6, 1+1e-6)
result2D <- optim(par = initGuess, fn = NLL2D, gr = deriv2DNLL, x = POI2$x, y = POI2$y, method = "L-BFGS-B", lower = lowerBounds)
optimPOI2Par <- result2D$par
optimPOI2Par
initGuess <- c(x0 = 4115, y0 = 4052, alpha = 1, beta = 2)
lowerBounds <- c(0, 0, 1e-6, 1+1e-6)
result2D <- optim(par = initGuess, fn = NLL2D, gr = deriv2DNLL, x = POI2$x, y = POI2$y, method = "L-BFGS-B", lower = lowerBounds)
optimPOI2Par <- result2D$par
optimPOI2Par
xRange <- seq(4110, 4120, length = 100)
yRange <- seq(4045, 4055, length = 100)
grid <- expand.grid(x = xRange, y = yRange)
amplitude <- (1.9175-1)/(pi*0.6863^2)
amplitude
parameters <- c(amplitude, optimPOI2Par)
zPOI2<- Moffat2D(grid, parameters)
zPOI2Matrix <- matrix(zPOI2, nrow = length(xRange), ncol = length(yRange))
image(xRange, yRange, zPOI2Matrix, xlab = "x", ylab = "y", main = "2D Moffat")
persp(xRange, yRange, zPOI2Matrix, xlab = "x", ylab = "y", main = "2D Moffat")
knitr::opts_chunk$set(echo = TRUE)
Terzan5 <- read.csv("C:\\Users\\Blake\\Desktop\\Uni\\Honours\\Project\\Terzan 5 X-ray events.csv")
library(MASS)
library(ggplot2)
library(plotly)
library(readr)
library(ggpointdensity)
library(viridis)
library(tidyr)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(plotly)
library(readr)
library(ggpointdensity)
library(viridis)
library(tidyr)
library(fitdistrplus)
## Color pallete
cbPalette <- c("#56B4E9", "#E69F00", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
library(here)
i_am("MoffatPDF.Rmd")
Terzan5 <- readr::read_csv(here("Data", "Terzan 5 X-ray events.csv"), col_types = list(.default = readr::col_guess()), )
head(Terzan5)
T5 <- data.frame(Terzan5$x, Terzan5$y)
colnames(T5) <- c('x','y')
ggplot(T5,aes(x,y)) + geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") + scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(10, 100, 1000, 10000)) + coord_fixed()
POI1 <- T5 %>%
filter(x>4160 & x<4180 & y>4180 & y<4200)
POI2 <- T5 %>%
filter(x>4105 & x< 4125 & y>4040 & y<4060)
ggplot(POI2, aes(x,y))+geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") + scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(10, 100, 1000)) + coord_fixed()
POI1 <- T5 %>%
filter(x>4160 & x<4180 & y>4180 & y<4200)
POI2 <- T5 %>%
filter(x>4105 & x< 4125 & y>4040 & y<4060)
celestialSource1 <- T5 %>%
filter(x>4030 & x<4050 & y>4060 & y<4080)
celestialSource2 <- T5 %>%
filter(x>4060 & x<4080 & y>4100 & y<4120)
celestialSource2 <- T5 %>%
filter(x>4060 & x<4080 & y>4150 & y<4170)
POI1 <- T5 %>%
filter(x>4160 & x<4180 & y>4180 & y<4200)
POI2 <- T5 %>%
filter(x>4105 & x< 4125 & y>4040 & y<4060)
celestialSource1 <- T5 %>%
filter(x>4030 & x<4050 & y>4060 & y<4080)
celestialSource2 <- T5 %>%
filter(x>4060 & x<4080 & y>4100 & y<4120)
celestialSource3 <- T5 %>%
filter(x>4060 & x<4080 & y>4150 & y<4170)
ggplot(POI1, aes(x,y))+geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") + scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(10, 100, 1000)) + coord_fixed()
ggplot(POI2, aes(x,y))+geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") + scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(10, 100, 1000)) + coord_fixed()
ggplot(celestialSource1, aes(x,y))+geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") + scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(10, 100, 1000)) + coord_fixed()
ggplot(celestialSource2, aes(x,y))+geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") + scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(10, 100, 1000)) + coord_fixed()
ggplot(celestialSource3, aes(x,y))+geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") + scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(10, 100, 1000)) + coord_fixed()
ggplot(POI1, aes(x,y))+geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") + scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(10, 100, 1000)) + coord_fixed()
ggplot(POI2, aes(x,y))+geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") + scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(10, 100, 1000)) + coord_fixed()
ggplot(celestialSource1, aes(x,y))+geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") + scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(5, 25, 125)) + coord_fixed()
ggplot(celestialSource2, aes(x,y))+geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") + scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(5, 25, 125)) + coord_fixed()
ggplot(celestialSource3, aes(x,y))+geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") + scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(5, 25, 125)) + coord_fixed()
knitr::opts_chunk$set(echo = TRUE)
mean(celestialSource1$x)
mean(celestialSource1$y)
initGuess <- c(x0 = 4039.865, y0 = 4071.066, alpha = 1, beta = 2)
lowerBounds <- c(0, 0, 1e-6, 1+1e-6)
result2D <- optim(par = initGuess, fn = NLL2D, gr = deriv2DNLL, x = POI2$x, y = POI2$y, method = "L-BFGS-B", lower = lowerBounds)
Moffat2D <- function(grid, parameters){
x <- grid[[1]]
y <- grid[[2]]
amplitude <- parameters[[1]]
x0 <- parameters[[2]]
y0 <- parameters[[3]]
alpha <- parameters[[4]]
beta <- parameters[[5]]
amplitude*(1+((x - x0)^2 + (y - y0)^2)/alpha^2)^(-beta)
}
#grid of variables
xRange <- seq(-5, 5, length = 100)
yRange <- seq(-5, 5, length = 100)
grid <- expand.grid(x = xRange, y = yRange)
#Dummy parameters
dummyParams <- c(amplitude = 1, x0 = 0, y0 = 0, alpha = 1, beta = 1)
z <- Moffat2D(grid, dummyParams)
zMatrix <- matrix(z, nrow = length(xRange), ncol = length(yRange))
image(xRange, yRange, zMatrix, xlab = "x", ylab = "y", main = "2D Moffat")
persp(xRange, yRange, zMatrix, xlab = "x", ylab = "y", zlab = "f(x,y)", main = "2D Moffat")
NLL <- function(grid, parameters){
predictedDens <- Moffat2D(grid, parameters)
return(-sum(log(predictedDens)))
}
Moffat2DPDF <- function(parameters, x, y){
x0 <- parameters[[1]]
y0 <- parameters[[2]]
alpha <- parameters[[3]]
beta <- parameters[[4]]
alpha <- pmax(alpha, 1e-6)
beta <- pmax(beta, 1 + 1e-6)
((beta-1)/(pi*alpha^2))*(1+((x - x0)^2 + (y - y0)^2)/alpha^2)^(-beta)
}
library(pracma)
#Test 1
T1Params <- c(x0 = 1, y0 = 4, alpha = 0.4, beta = 2)
MoffatIntegral2D1 <- integral2(Moffat2DPDF, xmin = -100, xmax = 100, ymin = -100, ymax = 100, parameters = T1Params)[[1]]
MoffatIntegral2D1
#Test 2
T2Params <- c(x0 = -3, y0 = 7, alpha = 1.2, beta = 1.3)
MoffatIntegral2D2 <- integral2(Moffat2DPDF, xmin = -100, xmax = 100, ymin = -100, ymax = 100, parameters = T2Params)[[1]]
MoffatIntegral2D2
#Test 3
T3Params <- c(x0 = 4, y0 = 0, alpha = 3, beta = 2.4)
MoffatIntegral2D3 <- integral2(Moffat2DPDF, xmin = -100, xmax = 100, ymin = -100, ymax = 100, parameters = T3Params)[[1]]
MoffatIntegral2D3
NLL2D <- function(parameters, x, y){
predictedDens <- Moffat2DPDF(parameters, x, y)
return(-sum(log(predictedDens)))
}
deriv2DNLL <- function(parameters, x, y){
x0 <- parameters[[1]]
y0 <- parameters[[2]]
alpha <- parameters[[3]]
beta <- parameters[[4]]
dx0 <- -sum((2*beta*(x-x0))/(alpha^2 + (x-x0)^2 + (y-y0)^2))
dy0 <- -sum((2*beta*(y-y0))/(alpha^2 + (x-x0)^2 + (y-y0)^2))
dAlpha <- 2*sum(1/alpha + (beta*((x-x0)^2 + (y-y0)^2))/(alpha^3 + alpha*((x-x0)^2 + (y-y0)^2)))
dBeta <- -sum(1/beta - log(1+((x-x0)^2 + (y-y0)^2)/alpha^2))
return(c(dx0, dy0, dAlpha, dBeta))
}
initGuess <- c(x0 = 4039.865, y0 = 4071.066, alpha = 1, beta = 2)
lowerBounds <- c(0, 0, 1e-6, 1+1e-6)
result2D <- optim(par = initGuess, fn = NLL2D, gr = deriv2DNLL, x = POI2$x, y = POI2$y, method = "L-BFGS-B", lower = lowerBounds)
result2D
optimPOI2Par <- result2D$par
optimPOI2Par
initGuess <- c(x0 = 4039.865, y0 = 4071.066, alpha = 1, beta = 2)
lowerBounds <- c(0, 0, 1e-6, 1+1e-6)
result2D <- optim(par = initGuess, fn = NLL2D, gr = deriv2DNLL, x = POI2$x, y = POI2$y, method = "L-BFGS-B", lower = lowerBounds)
optimPOI2Par <- result2D$par
optimPOI2Par
initGuess <- c(x0 = 4039.865, y0 = 4071.066, alpha = 1, beta = 2)
lowerBounds <- c(0, 0, 1e-6, 1+1e-6)
result2D <- optim(par = initGuess, fn = NLL2D, gr = deriv2DNLL, x = celestialSource1$x, y = celestialSource1$y, method = "L-BFGS-B", lower = lowerBounds)
optimPOI2Par <- result2D$par
optimPOI2Par
initGuess <- c(x0 = 4039.865, y0 = 4071.066, alpha = 1, beta = 2)
lowerBounds <- c(0, 0, 1e-6, 1+1e-6)
result2D <- optim(par = initGuess, fn = NLL2D, gr = deriv2DNLL, x = celestialSource1$x, y = celestialSource1$y, method = "L-BFGS-B", lower = lowerBounds)
optimCS2Par <- result2D$par
optimCS2Par
xRange <- seq(4030, 4060, length = 100)
yRange <- seq(4060, 4080, length = 100)
grid <- expand.grid(x = xRange, y = yRange)
amplitude <- (optimCS2Par[[4]]-1)/(pi*optimCS2Par[[3]]^2)
parameters <- c(amplitude, optimCS2Par)
zCS2<- Moffat2D(grid, parameters)
zCS2Matrix <- matrix(zCS2, nrow = length(xRange), ncol = length(yRange))
par(pty = "s")
image(xRange, yRange, zCS2Matrix, xlab = "x", ylab = "y", main = "2D Moffat")
xRange <- seq(4030, 4050, length = 100)
yRange <- seq(4060, 4080, length = 100)
grid <- expand.grid(x = xRange, y = yRange)
amplitude <- (optimCS2Par[[4]]-1)/(pi*optimCS2Par[[3]]^2)
parameters <- c(amplitude, optimCS2Par)
zCS2<- Moffat2D(grid, parameters)
zCS2Matrix <- matrix(zCS2, nrow = length(xRange), ncol = length(yRange))
par(pty = "s")
image(xRange, yRange, zCS2Matrix, xlab = "x", ylab = "y", main = "2D Moffat")
POI1 <- T5 %>%
filter(x>4160 & x<4180 & y>4180 & y<4200)
POI2 <- T5 %>%
filter(x>4105 & x< 4125 & y>4040 & y<4060)
celestialSource1 <- T5 %>%
filter(x>4030 & x<4050 & y>4060 & y<4080)
celestialSource2 <- T5 %>%
filter(x>4070 & x<4080 & y>4100 & y<4110)
celestialSource3 <- T5 %>%
filter(x>4060 & x<4080 & y>4150 & y<4170)
ggplot(POI1, aes(x,y)) +
geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") +
scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(10, 100, 1000)) +
coord_fixed()
ggplot(POI2, aes(x,y)) +
geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") +
scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(10, 100, 1000)) +
coord_fixed()
ggplot(celestialSource1, aes(x,y)) +
geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") +
scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(5, 25, 125)) +
coord_fixed()
ggplot(celestialSource2, aes(x,y)) +
geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") +
scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(5, 25, 125)) +
coord_fixed()
ggplot(celestialSource3, aes(x,y)) +
geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") +
scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(5, 25, 125)) +
coord_fixed()
initGuess <- c(x0 = 4039.865, y0 = 4071.066, alpha = 1, beta = 2)
lowerBounds <- c(0, 0, 1e-6, 1+1e-6)
result2D <- optim(par = initGuess, fn = NLL2D, gr = deriv2DNLL, x = celestialSource1$x, y = celestialSource1$y, method = "L-BFGS-B", lower = lowerBounds)
optimCS1Par <- result2D$par
optimCS1Par
xRange <- seq(4030, 4050, length = 100)
yRange <- seq(4060, 4080, length = 100)
grid <- expand.grid(x = xRange, y = yRange)
amplitude <- (optimCS1Par[[4]]-1)/(pi*optimCS1Par[[3]]^2)
parameters <- c(amplitude, optimCS1Par)
zCS1<- Moffat2D(grid, parameters)
zCS1Matrix <- matrix(zCS1, nrow = length(xRange), ncol = length(yRange))
par(pty = "s")
image(xRange, yRange, zCS1Matrix, xlab = "x", ylab = "y", main = "2D Moffat")
mean(celestialSource2$x)
mean(celestialSource2$y)
initGuess <- c(x0 = 4073.925, y0 = 4105.563, alpha = 1, beta = 2)
lowerBounds <- c(0, 0, 1e-6, 1+1e-6)
result2D <- optim(par = initGuess, fn = NLL2D, gr = deriv2DNLL, x = celestialSource2$x, y = celestialSource2$y, method = "L-BFGS-B", lower = lowerBounds)
optimCS2Par <- result2D$par
optimCS2Par
xRange <- seq(4070, 4080, length = 100)
yRange <- seq(4100, 4110, length = 100)
grid <- expand.grid(x = xRange, y = yRange)
amplitude <- (optimCS1Par[[4]]-1)/(pi*optimCS1Par[[3]]^2)
parameters <- c(amplitude, optimCS1Par)
zCS1<- Moffat2D(grid, parameters)
zCS1Matrix <- matrix(zCS1, nrow = length(xRange), ncol = length(yRange))
par(pty = "s")
image(xRange, yRange, zCS1Matrix, xlab = "x", ylab = "y", main = "2D Moffat")
xRange <- seq(4070, 4080, length = 100)
yRange <- seq(4100, 4110, length = 100)
grid <- expand.grid(x = xRange, y = yRange)
amplitude <- (optimCS1Par[[4]]-1)/(pi*optimCS1Par[[3]]^2)
parameters <- c(amplitude, optimCS1Par)
zCS2<- Moffat2D(grid, parameters)
zCS2Matrix <- matrix(zCS2, nrow = length(xRange), ncol = length(yRange))
par(pty = "s")
image(xRange, yRange, zCS2Matrix, xlab = "x", ylab = "y", main = "2D Moffat")
xRange <- seq(4070, 4080, length = 100)
yRange <- seq(4100, 4110, length = 100)
grid <- expand.grid(x = xRange, y = yRange)
amplitude <- (optimCS2Par[[4]]-1)/(pi*optimCS1Par[[3]]^2)
parameters <- c(amplitude, optimCS2Par)
zCS2<- Moffat2D(grid, parameters)
zCS2Matrix <- matrix(zCS2, nrow = length(xRange), ncol = length(yRange))
par(pty = "s")
image(xRange, yRange, zCS2Matrix, xlab = "x", ylab = "y", main = "2D Moffat")
POI1 <- T5 %>%
filter(x>4160 & x<4180 & y>4180 & y<4200)
POI2 <- T5 %>%
filter(x>4105 & x< 4125 & y>4040 & y<4060)
celestialSource1 <- T5 %>%
filter(x>4030 & x<4050 & y>4060 & y<4080)
celestialSource2 <- T5 %>%
filter(x>4070 & x<4080 & y>4100 & y<4110)
celestialSource3 <- T5 %>%
filter(x>4070 & x<4080 & y>4150 & y<4160)
ggplot(POI1, aes(x,y)) +
geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") +
scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(10, 100, 1000)) +
coord_fixed()
ggplot(POI2, aes(x,y)) +
geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") +
scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(10, 100, 1000)) +
coord_fixed()
ggplot(celestialSource1, aes(x,y)) +
geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") +
scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(5, 25, 125)) +
coord_fixed()
ggplot(celestialSource2, aes(x,y)) +
geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") +
scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(5, 25, 125)) +
coord_fixed()
ggplot(celestialSource3, aes(x,y)) +
geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") +
scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(5, 25, 125)) +
coord_fixed()
mean(celestialSource3$x)
mean(celestialSource3$y)
initGuess <- c(x0 = 4074.631, y0 = 4156.233, alpha = 1, beta = 2)
lowerBounds <- c(0, 0, 1e-6, 1+1e-6)
result2D <- optim(par = initGuess, fn = NLL2D, gr = deriv2DNLL, x = celestialSource3$x, y = celestialSource3$y, method = "L-BFGS-B", lower = lowerBounds)
optimCS3Par <- result2D$par
optimCS3Par
xRange <- seq(4070, 4080, length = 100)
yRange <- seq(4100, 4110, length = 100)
grid <- expand.grid(x = xRange, y = yRange)
amplitude <- (optimCS3Par[[4]]-1)/(pi*optimCS1Par[[3]]^2)
parameters <- c(amplitude, optimCS3Par)
zCS3<- Moffat2D(grid, parameters)
zCS3Matrix <- matrix(zCS3, nrow = length(xRange), ncol = length(yRange))
par(pty = "s")
image(xRange, yRange, zCS3Matrix, xlab = "x", ylab = "y", main = "2D Moffat")
xRange <- seq(4070, 4080, length = 100)
yRange <- seq(4150, 4160, length = 100)
grid <- expand.grid(x = xRange, y = yRange)
amplitude <- (optimCS3Par[[4]]-1)/(pi*optimCS1Par[[3]]^2)
parameters <- c(amplitude, optimCS3Par)
zCS3<- Moffat2D(grid, parameters)
zCS3Matrix <- matrix(zCS3, nrow = length(xRange), ncol = length(yRange))
par(pty = "s")
image(xRange, yRange, zCS3Matrix, xlab = "x", ylab = "y", main = "2D Moffat")
knitr::opts_chunk$set(echo = TRUE)
# Sample data
n <- 10
mu0 <- 2
sd0 <- 1
set.seed(54321)
samp <- rnorm(n = n, mean = mu0, sd = sd0)
# Fn vs. F0
plot(ecdf(samp), main = "", ylab = "Probability", xlim = c(-1, 6),
ylim = c(0, 1.3))
curve(pnorm(x, mean = mu0, sd = sd0), add = TRUE, col = 4)
# Add Dn+ and Dn-
samp_sorted <- sort(samp)
Ui <- pnorm(samp_sorted, mean = mu0, sd = sd0)
Dn_plus <- (1:n) / n - Ui
Dn_minus <- Ui - (1:n - 1) / n
i_plus <- which.max(Dn_plus)
i_minus <- which.max(Dn_minus)
lines(rep(samp_sorted[i_plus], 2),
c(i_plus / n, pnorm(samp_sorted[i_plus], mean = mu0, sd = sd0)),
col = 3, lwd = 2, pch = 16, type = "o", cex = 0.75)
lines(rep(samp_sorted[i_minus], 2),
c((i_minus - 1) / n, pnorm(samp_sorted[i_minus], mean = mu0, sd = sd0)),
col = 2, lwd = 2, pch = 16, type = "o", cex = 0.75)
rug(samp)
legend("topleft", lwd = 2, col = c(1, 4, 3, 2),
legend = latex2exp::TeX(c("$F_n$", "$F_0$", "$D_n^+$", "$D_n^-$")))
install.packages("latex2exp")
library(latex2exp)
library(latex2exp)
# Sample data
n <- 10
mu0 <- 2
sd0 <- 1
set.seed(54321)
samp <- rnorm(n = n, mean = mu0, sd = sd0)
# Fn vs. F0
plot(ecdf(samp), main = "", ylab = "Probability", xlim = c(-1, 6),
ylim = c(0, 1.3))
curve(pnorm(x, mean = mu0, sd = sd0), add = TRUE, col = 4)
# Add Dn+ and Dn-
samp_sorted <- sort(samp)
Ui <- pnorm(samp_sorted, mean = mu0, sd = sd0)
Dn_plus <- (1:n) / n - Ui
Dn_minus <- Ui - (1:n - 1) / n
i_plus <- which.max(Dn_plus)
i_minus <- which.max(Dn_minus)
lines(rep(samp_sorted[i_plus], 2),
c(i_plus / n, pnorm(samp_sorted[i_plus], mean = mu0, sd = sd0)),
col = 3, lwd = 2, pch = 16, type = "o", cex = 0.75)
lines(rep(samp_sorted[i_minus], 2),
c((i_minus - 1) / n, pnorm(samp_sorted[i_minus], mean = mu0, sd = sd0)),
col = 2, lwd = 2, pch = 16, type = "o", cex = 0.75)
rug(samp)
legend("topleft", lwd = 2, col = c(1, 4, 3, 2),
legend = latex2exp::TeX(c("$F_n$", "$F_0$", "$D_n^+$", "$D_n^-$")))
# Sample data from a N(0, 1)
n <- 50
set.seed(3245678)
x <- rnorm(n = n)
# Kolmogorov-Smirnov test for H_0: F = N(0, 1). Does not reject
(ks <- ks.test(x = x, y = "pnorm")) # In "y" we specify F0 as a function
# Structure of "htest" class
str(ks)
# Kolmogorov-Smirnov test for H_0: F = N(0.5, 1). Rejects
ks.test(x = x, y = "pnorm", mean = 0.5)
# Kolmogorov-Smirnov test for H_0: F = Exp(2). Strongly rejects
ks.test(x = x, y = "pexp", rate = 1/2)
knitr::opts_chunk$set(echo = TRUE)
celestialSource1 <- T5 %>%
filter(x>4030 & x<4050 & y>4060 & y<4080)
library(ggplot2)
library(plotly)
library(readr)
library(ggpointdensity)
library(viridis)
library(tidyr)
library(fitdistrplus)
## Color pallete
cbPalette <- c("#56B4E9", "#E69F00", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
celestialSource1 <- T5 %>%
filter(x>4030 & x<4050 & y>4060 & y<4080)
celestialSource2 <- T5 %>%
filter(x>4070 & x<4080 & y>4100 & y<4110)
celestialSource3 <- T5 %>%
filter(x>4070 & x<4080 & y>4150 & y<4160)
ggplot(celestialSource1, aes(x,y)) +
geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") +
scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(5, 25, 125)) +
coord_fixed()
ggplot(celestialSource2, aes(x,y)) +
geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") +
scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(5, 25, 125)) +
coord_fixed()
ggplot(celestialSource3, aes(x,y)) +
geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") +
scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(5, 25, 125)) +
coord_fixed()
ks.test(x = line2$x, y = "pnorm")
line0 <- POI2 %>%
filter(y>4048.5 & y< 4049.5)
line1 <- POI2 %>%
filter(y>4049.5 & y< 4050.5)
line2 <- POI2 %>%
filter(y>4050.5 & y< 4051.5)
line3 <- POI2 %>%
filter(y>4051.5 & y< 4052.5)
line4 <- POI2 %>%
filter(y>4052.5 & y< 4053.5)
line5 <- POI2 %>%
filter(y>4053.5 & y< 4054.5)
line6 <- POI2 %>%
filter(y>4054.5 & y< 4055.5)
lineback <- POI2 %>%
filter(y>4055 & y< 4060)
line2.5 <- POI2 %>%
filter(y>4050.5 & y< 4051)
ks.test(x = line2$x, y = "pnorm")
