xVal <- seq(min(sampleData), max(sampleData), length = 1000)
optimisedDens <- MoffatNS(optimPar, xVal)
optDens2 <- MoffatNS(optimPar2, xVal)
plot(sampleData)
plot(xValN, optimisedDensN, type = "l", main = "Optimised Density Function (Gaussian)", xlab = "x", ylab = "Density")
plot(xVal, optimisedDens, type = "l", main = "Optimised Density Function (Moffat, NLL)", xlab = "x", ylab = "Density")
plot(xVal, optDens2, type = "l", main = "Optimised Density Function (Moffat, grad)", xlab = "x", ylab = "Density")
#Fitting to data
xVall2 <- seq(min(xl2), max(xl2), length = 963)
#plot time
xVal <- seq(min(sampleData), max(sampleData), length = 1000)
optimisedDens <- MoffatNS(optimPar, xVal)
optDens2 <- MoffatNS(optimPar2, xVal)
plot(sampleData)
plot(xValN, optimisedDensN, type = "l", main = "Optimised Density Function (Gaussian)", xlab = "x", ylab = "Density")
plot(xVal, optimisedDens, type = "l", main = "Optimised Density Function (Moffat, NLL)", xlab = "x", ylab = "Density")
plot(xVal, optDens2, type = "l", main = "Optimised Density Function (Moffat, grad)", xlab = "x", ylab = "Density")
#data to fit to
line2 <- POI2 %>%
filter(y>4050.5 & y< 4051.5)
plotdist(line2$x)
plot(line2)
xl2 <- line2$x
plot(xl2)
line2.5 <- line2 %>%
filter(y>4050.5 & y< 4051)
plot(line2.5)
xl2.5 <- line2.5$x
plot(xl2.5)
#Fitting to data
xVall2 <- seq(min(xl2), max(xl2), length = 963)
plot(xl2)
#set initial guesses
initialGuess <- c(amplitude = 0.4, mu = 4115, gamma = 0.5, alpha = 0.4)
#Method 1
#l2m1 = line 2 (slice of celestial source), method 1 (negative log likelihood)
resultl2m1 <- optim(par = initialGuess, fn = negLogLike, x = xl2, method = "Nelder-Mead")
optimParl2m1 <- resultl2m1$par
print(optimParl2m1)
optDenl2m1 <- MoffatNS(optimParl2m1, xVall2)
#Method 2
#l2m2 = line 2 (slice of celestial source), method 2 (mle)
resultl2m2 <- optim(par = initialGuess, fn = Moffat1D, gr = MoffatDeriv, x = xl2, lower = lowerBounds, method = "L-BFGS-B")
optimParl2m2 <- resultl2m2$par
print(optimParl2m2)
optDenl2m2<- MoffatNS(optimParl2m2, xVall2)
#plot
par(mfrow = c(1,2))
plot(xVall2, optDenl2m1, type = "l", main = "Optimised Density Function (NLL)", xlab = "x", ylab = "Density")
plot(xVall2, optDenl2m2, type = "l", main = "Optimised Density Function", xlab = "x", ylab = "Density")
par(mfrow = c(1,3))
plot(xl2)
plot(MoffatNS(optimParl2m1, xl2))
plot(MoffatNS(optimParl2m2, xl2))
#Fitting to data
xVall2 <- seq(min(xl2), max(xl2), length = 963)
plot(xl2)
#set initial guesses
initialGuess <- c(amplitude = 0.4, mu = 4115, gamma = 10, alpha = 0.4)
#Method 1
#l2m1 = line 2 (slice of celestial source), method 1 (negative log likelihood)
resultl2m1 <- optim(par = initialGuess, fn = negLogLike, x = xl2, method = "Nelder-Mead")
optimParl2m1 <- resultl2m1$par
print(optimParl2m1)
optDenl2m1 <- MoffatNS(optimParl2m1, xVall2)
#Method 2
#l2m2 = line 2 (slice of celestial source), method 2 (mle)
resultl2m2 <- optim(par = initialGuess, fn = Moffat1D, gr = MoffatDeriv, x = xl2, lower = lowerBounds, method = "L-BFGS-B")
optimParl2m2 <- resultl2m2$par
print(optimParl2m2)
optDenl2m2<- MoffatNS(optimParl2m2, xVall2)
#plot
par(mfrow = c(1,2))
plot(xVall2, optDenl2m1, type = "l", main = "Optimised Density Function (NLL)", xlab = "x", ylab = "Density")
plot(xVall2, optDenl2m2, type = "l", main = "Optimised Density Function", xlab = "x", ylab = "Density")
par(mfrow = c(1,3))
plot(xl2)
plot(MoffatNS(optimParl2m1, xl2))
plot(MoffatNS(optimParl2m2, xl2))
#Fitting to data
xVall2 <- seq(min(xl2), max(xl2), length = 963)
plot(xl2)
#set initial guesses
initialGuess <- c(amplitude = 1, mu = 4115, gamma = 10, alpha = 0.4)
#Method 1
#l2m1 = line 2 (slice of celestial source), method 1 (negative log likelihood)
resultl2m1 <- optim(par = initialGuess, fn = negLogLike, x = xl2, method = "Nelder-Mead")
optimParl2m1 <- resultl2m1$par
print(optimParl2m1)
optDenl2m1 <- MoffatNS(optimParl2m1, xVall2)
#Method 2
#l2m2 = line 2 (slice of celestial source), method 2 (mle)
resultl2m2 <- optim(par = initialGuess, fn = Moffat1D, gr = MoffatDeriv, x = xl2, lower = lowerBounds, method = "L-BFGS-B")
optimParl2m2 <- resultl2m2$par
print(optimParl2m2)
optDenl2m2<- MoffatNS(optimParl2m2, xVall2)
#plot
par(mfrow = c(1,2))
plot(xVall2, optDenl2m1, type = "l", main = "Optimised Density Function (NLL)", xlab = "x", ylab = "Density")
plot(xVall2, optDenl2m2, type = "l", main = "Optimised Density Function", xlab = "x", ylab = "Density")
par(mfrow = c(1,3))
plot(xl2)
plot(MoffatNS(optimParl2m1, xl2))
plot(MoffatNS(optimParl2m2, xl2))
#Fitting to data
xVall2 <- seq(min(xl2), max(xl2), length = 963)
plot(xl2)
#set initial guesses
initialGuess <- c(amplitude = 1, mu = 4115, gamma = 100, alpha = 0.4)
#Method 1
#l2m1 = line 2 (slice of celestial source), method 1 (negative log likelihood)
resultl2m1 <- optim(par = initialGuess, fn = negLogLike, x = xl2, method = "Nelder-Mead")
optimParl2m1 <- resultl2m1$par
print(optimParl2m1)
optDenl2m1 <- MoffatNS(optimParl2m1, xVall2)
#Method 2
#l2m2 = line 2 (slice of celestial source), method 2 (mle)
resultl2m2 <- optim(par = initialGuess, fn = Moffat1D, gr = MoffatDeriv, x = xl2, lower = lowerBounds, method = "L-BFGS-B")
optimParl2m2 <- resultl2m2$par
print(optimParl2m2)
optDenl2m2<- MoffatNS(optimParl2m2, xVall2)
#plot
par(mfrow = c(1,2))
plot(xVall2, optDenl2m1, type = "l", main = "Optimised Density Function (NLL)", xlab = "x", ylab = "Density")
plot(xVall2, optDenl2m2, type = "l", main = "Optimised Density Function", xlab = "x", ylab = "Density")
par(mfrow = c(1,3))
plot(xl2)
plot(MoffatNS(optimParl2m1, xl2))
plot(MoffatNS(optimParl2m2, xl2))
#Fitting to data
xVall2 <- seq(min(xl2), max(xl2), length = 963)
plot(xl2)
#set initial guesses
initialGuess <- c(amplitude = 1, mu = 4115, gamma = 10000, alpha = 0.4)
#Method 1
#l2m1 = line 2 (slice of celestial source), method 1 (negative log likelihood)
resultl2m1 <- optim(par = initialGuess, fn = negLogLike, x = xl2, method = "Nelder-Mead")
optimParl2m1 <- resultl2m1$par
print(optimParl2m1)
optDenl2m1 <- MoffatNS(optimParl2m1, xVall2)
#Method 2
#l2m2 = line 2 (slice of celestial source), method 2 (mle)
resultl2m2 <- optim(par = initialGuess, fn = Moffat1D, gr = MoffatDeriv, x = xl2, lower = lowerBounds, method = "L-BFGS-B")
optimParl2m2 <- resultl2m2$par
print(optimParl2m2)
optDenl2m2<- MoffatNS(optimParl2m2, xVall2)
#plot
par(mfrow = c(1,2))
plot(xVall2, optDenl2m1, type = "l", main = "Optimised Density Function (NLL)", xlab = "x", ylab = "Density")
plot(xVall2, optDenl2m2, type = "l", main = "Optimised Density Function", xlab = "x", ylab = "Density")
par(mfrow = c(1,3))
plot(xl2)
plot(MoffatNS(optimParl2m1, xl2))
plot(MoffatNS(optimParl2m2, xl2))
#Fitting to data
xVall2 <- seq(min(xl2), max(xl2), length = 963)
plot(xl2)
#set initial guesses
initialGuess <- c(amplitude = 1, mu = 4115, gamma = 1, alpha = 0.4)
#Method 1
#l2m1 = line 2 (slice of celestial source), method 1 (negative log likelihood)
resultl2m1 <- optim(par = initialGuess, fn = negLogLike, x = xl2, method = "Nelder-Mead")
optimParl2m1 <- resultl2m1$par
print(optimParl2m1)
optDenl2m1 <- MoffatNS(optimParl2m1, xVall2)
#Method 2
#l2m2 = line 2 (slice of celestial source), method 2 (mle)
resultl2m2 <- optim(par = initialGuess, fn = Moffat1D, gr = MoffatDeriv, x = xl2, lower = lowerBounds, method = "L-BFGS-B")
optimParl2m2 <- resultl2m2$par
print(optimParl2m2)
optDenl2m2<- MoffatNS(optimParl2m2, xVall2)
#plot
par(mfrow = c(1,2))
plot(xVall2, optDenl2m1, type = "l", main = "Optimised Density Function (NLL)", xlab = "x", ylab = "Density")
plot(xVall2, optDenl2m2, type = "l", main = "Optimised Density Function", xlab = "x", ylab = "Density")
par(mfrow = c(1,3))
plot(xl2)
plot(MoffatNS(optimParl2m1, xl2))
plot(MoffatNS(optimParl2m2, xl2))
#Fitting to data
xVall2 <- seq(min(xl2), max(xl2), length = 963)
plot(xl2)
#set initial guesses
initialGuess <- c(amplitude = 1, mu = 4115, gamma = 0.1, alpha = 0.4)
#Method 1
#l2m1 = line 2 (slice of celestial source), method 1 (negative log likelihood)
resultl2m1 <- optim(par = initialGuess, fn = negLogLike, x = xl2, method = "Nelder-Mead")
optimParl2m1 <- resultl2m1$par
print(optimParl2m1)
optDenl2m1 <- MoffatNS(optimParl2m1, xVall2)
#Method 2
#l2m2 = line 2 (slice of celestial source), method 2 (mle)
resultl2m2 <- optim(par = initialGuess, fn = Moffat1D, gr = MoffatDeriv, x = xl2, lower = lowerBounds, method = "L-BFGS-B")
optimParl2m2 <- resultl2m2$par
print(optimParl2m2)
optDenl2m2<- MoffatNS(optimParl2m2, xVall2)
#plot
par(mfrow = c(1,2))
plot(xVall2, optDenl2m1, type = "l", main = "Optimised Density Function (NLL)", xlab = "x", ylab = "Density")
plot(xVall2, optDenl2m2, type = "l", main = "Optimised Density Function", xlab = "x", ylab = "Density")
par(mfrow = c(1,3))
plot(xl2)
plot(MoffatNS(optimParl2m1, xl2))
plot(MoffatNS(optimParl2m2, xl2))
source("~/.active-rstudio-document", echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(plotly)
library(readr)
library(ggpointdensity)
library(viridis)
library(tidyr)
library(fitdistrplus)
library(ggplot2)
library(plotly)
library(readr)
library(ggpointdensity)
library(viridis)
library(tidyr)
library(fitdistrplus)
library(here)
i_am("MoffatPDF.Rmd")
Tz5 <- readr::read_csv(here("Data", "Terzan 5 X-ray events.csv"), col_types = list(.default = readr::col_guess()), )
head(Tz5)
T5 <- data.frame(Tz5$x, Tz5$y)
colnames(T5) <- c('x','y')
POI1 <- T5 %>%
filter(x>4160 & x<4180 & y>4180 & y<4200)
POI2 <- T5 %>%
filter(x>4105 & x< 4125 & y>4040 & y<4060)
#data to fit to
line2 <- POI2 %>%
filter(y>4050.5 & y< 4051.5)
plotdist(line2$x)
plot(line2)
line2.5 <- line2 %>%
filter(y>4050.5 & y< 4051)
plot(line2.5)
xl2 <- line2$x
xl2.5 <- line2.5$x
xVall2 <- seq(min(xl2), max(xl2), length = 963)
xVall2.5 <- seq(min(xl2.5), max(xl2.5), length = 291)
MOFFATPDF <- function(parameters, x){
mu <- parameters[[1]]
alpha <- parameters[[2]]
beta <- parameters[[3]]
alpha <- pmax(alpha, 1e-6)
beta <- pmax(beta, 0.5+1e-6)
predictedDensity <- (gamma(beta)/(alpha*sqrt(pi)*gamma(beta-0.5)))*(1+((x-mu)/alpha)^2)^-beta
return(predictedDensity)
}
NLL <- function(parameters, x){
predictedDensity <- MOFFATPDF(parameters, x)
return(-sum(log(predictedDensity)))
}
derivMOFFATPDS <- function(parameters, x){
mu <- parameters[[1]]
alpha <- parameters[[2]]
beta <- parameters[[3]]
dMu <- -sum((2*beta*(x-mu))/(alpha^2 + (x-mu)^2))
dAlpha <- -sum(-1/alpha + (2*beta*(x-mu)^2)/(alpha^3+alpha*(x-mu)^2))
dBeta <- -sum(digamma(beta)-digamma(beta-0.5)-log(1+(x-mu)^2/alpha^2))
return(c(dMu, dAlpha, dBeta))
}
initialGUESS <- c(mu = 4115, alpha = 1, beta = 4)
lowerBOUNDS <- c(0, 1e-6, 1.5)
RESULT <- optim(par = initialGUESS, fn = NLL, gr = derivMOFFATPDS, x = xl2.5, method = "L-BFGS-B", lower = lowerBOUNDS)
optimPAR2.5 <- RESULT$par
optimPAR2.5
optimDENS2.5 <- MOFFATPDF(optimPAR2.5, xVall2.5)
plot(xVall2.5, optimDENS2.5, type = "l", main = "Optimised Density Function", xlab = "x", ylab = "Density")
RESULT <- optim(par = initialGUESS, fn = NLL, gr = derivMOFFATPDS, x = xl2, method = "L-BFGS-B", lower = lowerBOUNDS)
optimPAR2 <- RESULT$par
optimPAR2
optimDENS2 <- MOFFATPDF(optimPAR2, xVall2)
plot(xVall2, optimDENS2, type = "l", main = "Optimised Density Function", xlab = "x", ylab = "Density")
## Color pallete
cbPalette <- c("#56B4E9", "#E69F00", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
## plotting layers in ggplot
ggplot(POI2) +
geom_histogram(aes(x, y=after_stat(density), colour="data"),bins=50,fill=cbPalette[5]) +
stat_function(fun=MOFFATPDF,args = list(parameters = optimPAR2), n=1000, aes(colour="Moffat PDF"), linewidth=1.2) +
ylab("p(x)") +
scale_colour_manual("Legend", values = cbPalette)
## Color pallete
cbPalette <- c("#56B4E9", "#E69F00", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
optimDENS2.5 <- MOFFATPDF(optimPAR2.5, xVall2.5)
## plotting layers in ggplot
ggplot(POI2.5) +
geom_histogram(aes(x, y=after_stat(density), colour="data"),bins=50,fill=cbPalette[5]) +
stat_function(fun=MOFFATPDF,args = list(parameters = optimPAR2), n=1000, aes(colour="Moffat PDF"), linewidth=1.2) +
ylab("p(x)") +
scale_colour_manual("Legend", values = cbPalette)
## Color pallete
cbPalette <- c("#56B4E9", "#E69F00", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
optimDENS2.5 <- MOFFATPDF(optimPAR2.5, xVall2.5)
## plotting layers in ggplot
ggplot(line2.5) +
geom_histogram(aes(x, y=after_stat(density), colour="data"),bins=50,fill=cbPalette[5]) +
stat_function(fun=MOFFATPDF,args = list(parameters = optimPAR2), n=1000, aes(colour="Moffat PDF"), linewidth=1.2) +
ylab("p(x)") +
scale_colour_manual("Legend", values = cbPalette)
RESULT <- optim(par = initialGUESS, fn = NLL, gr = derivMOFFATPDS, x = xl2, method = "L-BFGS-B", lower = lowerBOUNDS)
optimPAR2 <- RESULT$par
optimPAR2
optimDENS2 <- MOFFATPDF(optimPAR2, xVall2)
hist(line2)
RESULT <- optim(par = initialGUESS, fn = NLL, gr = derivMOFFATPDS, x = xl2, method = "L-BFGS-B", lower = lowerBOUNDS)
optimPAR2 <- RESULT$par
optimPAR2
optimDENS2 <- MOFFATPDF(optimPAR2, xVall2)
hist(xVall2)
line(xVall2, optimDENS2, type = "l", main = "Optimised Density Function", xlab = "x", ylab = "Density"))
RESULT <- optim(par = initialGUESS, fn = NLL, gr = derivMOFFATPDS, x = xl2, method = "L-BFGS-B", lower = lowerBOUNDS)
optimPAR2 <- RESULT$par
optimPAR2
optimDENS2 <- MOFFATPDF(optimPAR2, xVall2)
hist(xVall2)
line(xVall2, optimDENS2, type = "l", main = "Optimised Density Function", xlab = "x", ylab = "Density")
RESULT <- optim(par = initialGUESS, fn = NLL, gr = derivMOFFATPDS, x = xl2, method = "L-BFGS-B", lower = lowerBOUNDS)
optimPAR2 <- RESULT$par
optimPAR2
optimDENS2 <- MOFFATPDF(optimPAR2, xVall2)
hist(xVall2)
line(xVall2, optimDENS2)
## Color pallete
cbPalette <- c("#56B4E9", "#E69F00", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
optimDENS2.5 <- MOFFATPDF(optimPAR2.5, xVall2.5)
## plotting layers in ggplot
ggplot(line2.5) +
geom_histogram(aes(x, y=after_stat(density), colour="data"),bins=50,fill=cbPalette[5]) +
stat_function(fun=MOFFATPDF,args = list(parameters = optimPAR2), n=1000, aes(colour="Moffat PDF"), linewidth=1.2) +
ylab("p(x)") +
scale_colour_manual("Legend", values = cbPalette)
RESULT <- optim(par = initialGUESS, fn = NLL, gr = derivMOFFATPDS, x = xl2, method = "L-BFGS-B", lower = lowerBOUNDS)
optimPAR2 <- RESULT$par
optimPAR2
optimDENS2 <- MOFFATPDF(optimPAR2, xVall2)
plot(xVall2, optimDENS2, type = "l", main = "Optimised Density Function", xlab = "x", ylab = "Density")
optimDENS2 <- MOFFATPDF(optimPAR2, xVall2)
## plotting layers in ggplot
ggplot(line2) +
geom_histogram(aes(x, y=after_stat(density), colour="data"),bins=50,fill=cbPalette[5]) +
stat_function(fun=MOFFATPDF,args = list(parameters = optimPAR2), n=1000, aes(colour="Moffat PDF"), linewidth=1.2) +
ylab("p(x)") +
scale_colour_manual("Legend", values = cbPalette)
## Color pallete
cbPalette <- c("#56B4E9", "#E69F00", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
optimDENS2.5 <- MOFFATPDF(optimPAR2.5, xVall2.5)
## plotting layers in ggplot
ggplot(line2.5) +
geom_histogram(aes(x, y=after_stat(density), colour="data"),bins=50,fill=cbPalette[5]) +
stat_function(fun=MOFFATPDF,args = list(parameters = optimPAR2.5), n=1000, aes(colour="Moffat PDF"), linewidth=1.2) +
ylab("p(x)") +
scale_colour_manual("Legend", values = cbPalette)
initialGUESS <- c(mu = 4115, alpha = 1, beta = 4)
lowerBOUNDS <- c(0, 1e-6, 1.5)
RESULT <- optim(par = initialGUESS, fn = NLL, gr = derivMOFFATPDS, x = xl2.5, method = "L-BFGS-B", lower = lowerBOUNDS)
optimPAR2.5 <- RESULT$par
optimPAR2.5
RESULT <- optim(par = initialGUESS, fn = NLL, gr = derivMOFFATPDS, x = xl2, method = "L-BFGS-B", lower = lowerBOUNDS)
optimPAR2 <- RESULT$par
optimPAR2
knitr::opts_chunk$set(echo = TRUE)
Moffat2DPDF <- function(parameters, x, y){
x0 <- parameters[[1]]
y0 <- parameters[[2]]
alpha <- parameters[[3]]
beta <- parameters[[4]]
((beta-1)/(pi*alpha^2))*(1+((x - x0)^2 + (y - y0)^2)/alpha^2)^(-beta)
}
NLL2D <- function(parameters, x, y){
predictedDens <- Moffat2DPDF(parameters, x, y)
return(-sum(log(predictedDens)))
}
deriv2DNLL <- function(parameters, x, y){
x0 <- parameters[[1]]
y0 <- parameters[[2]]
alpha <- parameters[[3]]
beta <- parameters[[4]]
dx0 <- -sum((2*beta*(x-x0))/(alpha^2 + (x-x0)^2 + (y-y0)^2))
dy0 <- -sum((2*beta*(y-y0))/(alpha^2 + (x-x0)^2 + (y-y0)^2))
dAlpha <- 2*sum(1/alpha + (beta*((x-x0)^2 + (y-y0)^2))/(alpha^3 + alpha*((x-x0)^2 + (y-y0)^2)))
dBeta <- -sum(1/beta - log(1+((x-x0)^2 + (y-y0)^2)/alpha^2))
return(c(dx0, dy0, dAlpha, dBeta))
}
initGuess <- c(x0 = 4115, y0 = 4052, alpha = 1, beta = 2)
lowerBounds <- c(0, 0, 1e-6, 1+1e-6)
result2D <- optim(par = initGuess, fn = NLL2D, gr = deriv2DNLL, x = POI2$x, y = POI2$y, method = "L-BFGS-B", lower = lowerBounds)
optimPOI2Par <- result2D$par
optimPOI2Par
xRange <- seq(4110, 4120, length = 100)
yRange <- seq(4045, 4055, length = 100)
grid <- expand.grid(x = xRange, y = yRange)
amplitude <- (1.9175-1)/(pi*0.6863^2)
parameters <- c(amplitude, optimPOI2Par)
zPOI2<- Moffat2D(grid, parameters)
Moffat2D <- function(grid, parameters){
x <- grid[[1]]
y <- grid[[2]]
amplitude <- parameters[[1]]
x0 <- parameters[[2]]
y0 <- parameters[[3]]
alpha <- parameters[[4]]
beta <- parameters[[5]]
amplitude*(1+((x - x0)^2 + (y - y0)^2)/alpha^2)^(-beta)
}
#grid of variables
xRange <- seq(-5, 5, length = 100)
yRange <- seq(-5, 5, length = 100)
grid <- expand.grid(x = xRange, y = yRange)
#Dummy parameters
dummyParams <- c(amplitude = 1, x0 = 0, y0 = 0, alpha = 1, beta = 1)
z <- Moffat2D(grid, dummyParams)
zMatrix <- matrix(z, nrow = length(xRange), ncol = length(yRange))
image(xRange, yRange, zMatrix, xlab = "x", ylab = "y", main = "2D Moffat")
Moffat2DPDF <- function(parameters, x, y){
x0 <- parameters[[1]]
y0 <- parameters[[2]]
alpha <- parameters[[3]]
beta <- parameters[[4]]
((beta-1)/(pi*alpha^2))*(1+((x - x0)^2 + (y - y0)^2)/alpha^2)^(-beta)
}
NLL2D <- function(parameters, x, y){
predictedDens <- Moffat2DPDF(parameters, x, y)
return(-sum(log(predictedDens)))
}
deriv2DNLL <- function(parameters, x, y){
x0 <- parameters[[1]]
y0 <- parameters[[2]]
alpha <- parameters[[3]]
beta <- parameters[[4]]
dx0 <- -sum((2*beta*(x-x0))/(alpha^2 + (x-x0)^2 + (y-y0)^2))
dy0 <- -sum((2*beta*(y-y0))/(alpha^2 + (x-x0)^2 + (y-y0)^2))
dAlpha <- 2*sum(1/alpha + (beta*((x-x0)^2 + (y-y0)^2))/(alpha^3 + alpha*((x-x0)^2 + (y-y0)^2)))
dBeta <- -sum(1/beta - log(1+((x-x0)^2 + (y-y0)^2)/alpha^2))
return(c(dx0, dy0, dAlpha, dBeta))
}
xRange <- seq(4110, 4120, length = 100)
yRange <- seq(4045, 4055, length = 100)
grid <- expand.grid(x = xRange, y = yRange)
amplitude <- (1.9175-1)/(pi*0.6863^2)
parameters <- c(amplitude, optimPOI2Par)
zPOI2<- Moffat2D(grid, parameters)
zPOI2Matrix <- matrix(zPOI2, nrow = length(xRange), ncol = length(yRange))
image(xRange, yRange, zPOI2Matrix, xlab = "x", ylab = "y", main = "2D Moffat")
persp(xRange, yRange, zPOI2Matrix, xlab = "x", ylab = "y", main = "2D Moffat")
ggplot(POI2, aes(x,y)) +
geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") +
scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(10, 100, 1000)) +
coord_fixed()
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(plotly)
library(readr)
library(ggpointdensity)
library(viridis)
library(tidyr)
library(fitdistrplus)
## Color pallete
cbPalette <- c("#56B4E9", "#E69F00", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
ggplot(POI2, aes(x,y)) +
geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") +
scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(10, 100, 1000)) +
coord_fixed()
ggplot(line2) +
# geom_histogram(aes(x, y = after_stat(density), colour = "data"), bins = 50, fill=cbPalette[5]) +
# stat_function(fun = gaussian_density, args = list(parameters = optimized_parameters), n=1000, aes(colour="gaussian density"), linewidth=1.2) +
# stat_function(fun=MOFFATPDF,args = list(parameters = optimPAR2), n=1000, aes(colour="Moffat PDF"), linewidth=1.2) +
# ylab("p(x)") +
# scale_colour_manual("Legend", values = cbPalette)
ggplot(line2)
# geom_histogram(aes(x, y = after_stat(density), colour = "data"), bins = 50, fill=cbPalette[5]) +
# stat_function(fun = gaussian_density, args = list(parameters = optimized_parameters), n=1000, aes(colour="gaussian density"), linewidth=1.2) +
# stat_function(fun=MOFFATPDF,args = list(parameters = optimPAR2), n=1000, aes(colour="Moffat PDF"), linewidth=1.2) +
# ylab("p(x)") +
# scale_colour_manual("Legend", values = cbPalette)
ggplot(line2) +
geom_histogram(aes(x, y = after_stat(density), colour = "data"), bins = 50, fill=cbPalette[5]) +
stat_function(fun = gaussian_density, args = list(parameters = optimized_parameters), n=1000, aes(colour="gaussian density"), linewidth=1.2) +
stat_function(fun=MOFFATPDF,args = list(parameters = optimPAR2), n=1000, aes(colour="Moffat PDF"), linewidth=1.2) +
ylab("p(x)") +
scale_colour_manual("Legend", values = cbPalette)
ggplot(POI2) +
geom_histogram(aes(x, y, z = after_stat(density), colour = "data"), bins = 100, fill = cbPalette[5])
ggplot(POI2) +
geom_histogram(aes(x, y, colour = "data"), bins = 100, fill = cbPalette[5])
initGuess <- c(x0 = 4115, y0 = 4060, alpha = 1, beta = 2)
lowerBounds <- c(0, 0, 1e-6, 1+1e-6)
result2D <- optim(par = initGuess, fn = NLL2D, gr = deriv2DNLL, x = POI2$x, y = POI2$y, method = "L-BFGS-B", lower = lowerBounds)
optimPOI2Par <- result2D$par
optimPOI2Par
initGuess <- c(x0 = 4115, y0 = 4051, alpha = 1, beta = 2)
lowerBounds <- c(0, 0, 1e-6, 1+1e-6)
result2D <- optim(par = initGuess, fn = NLL2D, gr = deriv2DNLL, x = POI2$x, y = POI2$y, method = "L-BFGS-B", lower = lowerBounds)
optimPOI2Par <- result2D$par
optimPOI2Par
initGuess <- c(x0 = 4115, y0 = 4052, alpha = 1, beta = 2)
lowerBounds <- c(0, 0, 1e-6, 1+1e-6)
result2D <- optim(par = initGuess, fn = NLL2D, gr = deriv2DNLL, x = POI2$x, y = POI2$y, method = "L-BFGS-B", lower = lowerBounds)
optimPOI2Par <- result2D$par
optimPOI2Par
xRange <- seq(4110, 4120, length = 100)
yRange <- seq(4045, 4055, length = 100)
grid <- expand.grid(x = xRange, y = yRange)
amplitude <- (1.9175-1)/(pi*0.6863^2)
amplitude
parameters <- c(amplitude, optimPOI2Par)
zPOI2<- Moffat2D(grid, parameters)
zPOI2Matrix <- matrix(zPOI2, nrow = length(xRange), ncol = length(yRange))
image(xRange, yRange, zPOI2Matrix, xlab = "x", ylab = "y", main = "2D Moffat")
persp(xRange, yRange, zPOI2Matrix, xlab = "x", ylab = "y", main = "2D Moffat")
