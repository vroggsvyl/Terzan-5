z2Matrix <- matrix(z2, nrow = length(xRange), ncol = length(yRange))
image(xRange, yRange, z2Matrix, xlab = "x", ylab = "y", main = "2D Moffat - Moving x0")
#moving y0
z3 <- Moffat2D(grid, dummyParams3)
z3Matrix <- matrix(z3, nrow = length(xRange), ncol = length(yRange))
image(xRange, yRange, z3Matrix, xlab = "x", ylab = "y", main = "2D Moffat - Moving y0")
#Increasing alpha
z4 <- Moffat2D(grid, dummyParams4)
z4Matrix <- matrix(z4, nrow = length(xRange), ncol = length(yRange))
image(xRange, yRange, z4Matrix, xlab = "x", ylab = "y", main = "2D Moffat - Increasing alpha")
#Increasing beta
z5<- Moffat2D(grid, dummyParams5)
z5Matrix <- matrix(z5, nrow = length(xRange), ncol = length(yRange))
image(xRange, yRange, z5Matrix, xlab = "x", ylab = "y", main = "2D Moffat - Increasing beta")
persp(xRange, yRange, zMatrix, xlab = "x", ylab = "y", main = "2D Moffat")
persp(xRange, yRange, z1Matrix, xlab = "x", ylab = "y", main = "2D Moffat - Increasing A")
NLL <- function(grid, parameters){
predictedDens <- Moffat2D(grid, parameters)
return(-sum(log(predictedDens)))
}
#changing the value of the amplitude
amplitude <- seq(0.25, 5, by = 0.25)
i <- 1
changingA <- vector("numeric", length = 20)
while(i<=20){
parameters <- c(amplitude[[i]], 1, 1, 1, 1)
grid <- c(0,0)
changingA[i] <- (NLL(grid, parameters))
i <- i+1
}
#changing the value of x0
x0 <- seq(-5, 5, by = 0.5)
i <- 1
changingx0 <- vector("numeric", length = 21)
while(i<=21){
parameters <- c(1, x0[[i]], 1, 1, 1)
grid <- c(0,0)
changingx0[i] <- (NLL(grid, parameters))
i <- i+1
}
#changing the value of y0
y0 <- seq(-5, 5, by = 0.5)
i <- 1
changingy0 <- vector("numeric", length = 21)
while(i<=21){
parameters <- c(1, 1, y0[[i]], 1, 1)
grid <- c(0,0)
changingy0[i] <- (NLL(grid, parameters))
i <- i+1
}
#changing the value of alpha
alpha <- seq(0.25, 10, by = 0.25)
i <- 1
changingAlpha <- vector("numeric", length = 40)
while(i<=40){
parameters <- c(1, 1, 1, alpha[[i]], 1)
grid <- c(0,0)
changingAlpha[i] <- (NLL(grid, parameters))
i <- i+1
}
#changing the value of beta
beta <- seq(0.25, 10, by = 0.25)
i <- 1
changingBeta <- vector("numeric", length = 40)
while(i<=40){
parameters <- c(1, 1, 1, 1, beta[[i]])
grid <- c(0,0)
changingBeta[i] <- (NLL(grid, parameters))
i <- i+1
}
par(mfrow = c(2,3))
plot(amplitude, changingA, type = "l", xlab = "Amplitude", ylab = "Negative Log Likelihood")
plot(x0, changingx0, type = "l", xlab = "x0", ylab = "Negative Log Likelihood")
plot(y0, changingy0, type = "l", xlab = "x0", ylab = "Negative Log Likelihood")
plot(alpha, changingAlpha, type = "l", xlab = "Alpha", ylab = "Negative Log Likelihood")
plot(beta, changingBeta, type = "l", xlab = "Beta", ylab = "Negative Log Likelihood")
Moffat2DPDF <- function(parameters, x, y){
x0 <- parameters[[1]]
y0 <- parameters[[2]]
alpha <- parameters[[3]]
beta <- parameters[[4]]
alpha <- pmax(alpha, 1e-6)
beta <- pmax(beta, 1 + 1e-6)
return(((beta-1)/(pi*alpha^2))*(1+((x - x0)^2 + (y - y0)^2)/alpha^2)^(-beta))
}
library(pracma)
#Test 1
T1Params <- c(x0 = 1, y0 = 4, alpha = 0.4, beta = 2)
MoffatIntegral2D1 <- integral2(Moffat2DPDF, xmin = -100, xmax = 100, ymin = -100, ymax = 100, parameters = T1Params)[[1]]
MoffatIntegral2D1
#Test 2
T2Params <- c(x0 = -3, y0 = 7, alpha = 1.2, beta = 1.3)
MoffatIntegral2D2 <- integral2(Moffat2DPDF, xmin = -100, xmax = 100, ymin = -100, ymax = 100, parameters = T2Params)[[1]]
MoffatIntegral2D2
#Test 3
T3Params <- c(x0 = 4, y0 = 0, alpha = 3, beta = 2.4)
MoffatIntegral2D3 <- integral2(Moffat2DPDF, xmin = -100, xmax = 100, ymin = -100, ymax = 100, parameters = T3Params)[[1]]
MoffatIntegral2D3
xRange <- seq(-20, 20, length = 200)
yRange <- seq(-20, 20, length = 200)
grid <- expand.grid(xRange, yRange)
A1 <- (T1Params[[4]]-1)/(pi * T1Params[[3]])
zT1 <- Moffat2D(grid, parameters = c(A1, T1Params))
zT1Matrix <- matrix(zT1, nrow = length(xRange), ncol = length(yRange))
image(xRange, yRange, zT1Matrix)
A2 <- (T2Params[[4]]-1)/(pi * T2Params[[3]])
zT2 <- Moffat2D(grid, parameters = c(A2, T2Params))
zT2Matrix <- matrix(zT2, nrow = length(xRange), ncol = length(yRange))
image(xRange, yRange, zT2Matrix)
A3 <- (T3Params[[4]]-1)/(pi * T3Params[[3]])
zT3 <- Moffat2D(grid, parameters = c(A3, T3Params))
zT3Matrix <- matrix(zT3, nrow = length(xRange), ncol = length(yRange))
image(xRange, yRange, zT3Matrix)
NLL2D <- function(parameters, x, y){
predictedDens <- Moffat2DPDF(parameters, x, y)
return(-sum(log(predictedDens)))
}
NLL2D2 <- function(parameters, grid){
predictedDens <- Moffat2D(grid, parameters)
return(-sum(log(predictedDens)))
}
deriv2DNLL <- function(parameters, x, y){
x0 <- parameters[[1]]
y0 <- parameters[[2]]
alpha <- parameters[[3]]
beta <- parameters[[4]]
dx0 <- -sum((2*beta*(x-x0))/(alpha^2 + (x-x0)^2 + (y-y0)^2))
dy0 <- -sum((2*beta*(y-y0))/(alpha^2 + (x-x0)^2 + (y-y0)^2))
dAlpha <- 2*sum(1/alpha + (beta*((x-x0)^2 + (y-y0)^2))/(alpha^3 + alpha*((x-x0)^2 + (y-y0)^2)))
dBeta <- -sum(1/beta - log(1+((x-x0)^2 + (y-y0)^2)/alpha^2))
return(c(dx0, dy0, dAlpha, dBeta))
}
mean(POI1$x)
mean(POI1$y)
initGuess <- c(x0 = mean(POI1$x), y0 = mean(POI1$y), alpha = 1, beta = 2)
lowerBounds <- c(0, 0, 1e-6, 1+1e-6)
resultPOI1 <- optim(par = initGuess, fn = NLL2D, gr = deriv2DNLL, x = POI1$x, y = POI1$y, method = "L-BFGS-B", lower = lowerBounds)
resultPOI1
optimPOI1Par <- resultPOI1$par
optimPOI1Par
initGuess <- c(x0 = 4115.227, y0 = 4052.706, alpha = 1, beta = 2)
result2D <- optim(par = initGuess, fn = NLL2D, gr = deriv2DNLL, x = POI2$x, y = POI2$y, method = "L-BFGS-B", lower = lowerBounds)
result2D
optimPOI2Par <- result2D$par
optimPOI2Par
xRange <- seq(4110, 4120, length = 100)
yRange <- seq(4045, 4055, length = 100)
data <- expand.grid(x = xRange, y = yRange)
model <- ggplot(POI2, aes(x,y)) +
geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") +
scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(10, 100, 1000)) +
theme(legend.position = "none")
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10)
ggMarginal(model, type = "histogram")
contours
xRange <- seq(4110, 4120, length = 100)
yRange <- seq(4045, 4055, length = 100)
grid <- expand.grid(x = xRange, y = yRange)
amplitude <- (optimPOI2Par[[4]]-1)/(pi*optimPOI2Par[[3]]^2)
#amplitude
parameters <- c(amplitude, optimPOI2Par)
zPOI2<- Moffat2D(grid, parameters)
zPOI2Matrix <- matrix(zPOI2, nrow = length(xRange), ncol = length(yRange))
par(pty = "s")
image(xRange, yRange, zPOI2Matrix, xlab = "x", ylab = "y", main = "2D Moffat")
xRange <- seq(4110, 4120, length = 100)
yRange <- seq(4045, 4055, length = 100)
data <- expand.grid(x = xRange, y = yRange)
model <- ggplot(POI2, aes(x,y)) +
geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") +
scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(10, 100, 1000)) +
theme(legend.position = "none")
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 10)
ggMarginal(model, type = "histogram")
contours
contourData <- ggplot_build(contours)$data[[1]]
combined <- model + geom_path(data = contourData, aes(x = x, y = y, group = group), color = "red", alpha = 0.5) + coord_fixed()
combined
xRange <- seq(4110, 4120, length = 100)
yRange <- seq(4045, 4055, length = 100)
data <- expand.grid(x = xRange, y = yRange)
model <- ggplot(POI2, aes(x,y)) +
geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") +
scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(10, 100, 1000)) +
theme(legend.position = "none")
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 20)
contours
contourData <- ggplot_build(contours)$data[[1]]
combined <- model + geom_path(data = contourData, aes(x = x, y = y, group = group), color = "red", alpha = 0.5) + coord_fixed()
combined
xRange <- seq(4110, 4120, length = 100)
yRange <- seq(4045, 4055, length = 100)
data <- expand.grid(x = xRange, y = yRange)
model <- ggplot(POI2, aes(x,y)) +
geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") +
scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(10, 100, 1000)) +
theme(legend.position = "none")
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 40)
contours
contourData <- ggplot_build(contours)$data[[1]]
combined <- model + geom_path(data = contourData, aes(x = x, y = y, group = group), color = "red", alpha = 0.5) + coord_fixed()
combined
xRange <- seq(4110, 4120, length = 100)
yRange <- seq(4045, 4055, length = 100)
grid <- expand.grid(x = xRange, y = yRange)
amplitude <- (optimPOI2Par[[4]]-1)/(pi*optimPOI2Par[[3]]^2)
parameters <- c(amplitude, optimPOI2Par)
zPOI2<- Moffat2D(grid, parameters)
zPOI2Matrix <- matrix(zPOI2, nrow = length(xRange), ncol = length(yRange))
par(pty = "s")
image(xRange, yRange, zPOI2Matrix, xlab = "x", ylab = "y", main = "2D Moffat")
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 40)
contours
model <- ggplot(POI2, aes(x,y)) +
geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") +
scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(10, 100, 1000)) +
theme(legend.position = "none")
contourData <- ggplot_build(contours)$data[[1]]
combined <- model + geom_path(data = contourData, aes(x = x, y = y, group = group), color = "red", alpha = 0.5) + coord_fixed()
combined
xRange <- seq(4110, 4120, length = 100)
yRange <- seq(4045, 4055, length = 100)
grid <- expand.grid(x = xRange, y = yRange)
amplitude <- (optimPOI2Par[[4]]-1)/(pi*optimPOI2Par[[3]]^2)
parameters <- c(amplitude, optimPOI2Par)
zPOI2<- Moffat2D(grid, parameters)
zPOI2Matrix <- matrix(zPOI2, nrow = length(xRange), ncol = length(yRange))
par(pty = "s")
image(xRange, yRange, zPOI2Matrix, xlab = "x", ylab = "y", main = "2D Moffat")
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 40)
contours
model <- ggplot(POI2, aes(x,y)) +
geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") +
scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(10, 100, 1000)) +
theme(legend.position = "none")
model
contourData <- ggplot_build(contours)$data[[1]]
combined <- model + geom_path(data = contourData, aes(x = x, y = y, group = group), color = "red", alpha = 0.5) + coord_fixed()
combined
xRange <- seq(4110, 4120, length = 100)
yRange <- seq(4045, 4055, length = 100)
grid <- expand.grid(x = xRange, y = yRange)
amplitude <- (optimPOI2Par[[4]]-1)/(pi*optimPOI2Par[[3]]^2)
parameters <- c(amplitude, optimPOI2Par)
zPOI2<- Moffat2D(grid, parameters)
zPOI2Matrix <- matrix(zPOI2, nrow = length(xRange), ncol = length(yRange))
par(pty = "s")
image(xRange, yRange, zPOI2Matrix, xlab = "x", ylab = "y", main = "2D Moffat")
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 40)
contours
model <- ggplot(POI2, aes(x,y)) +
geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") +
scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(10, 100, 1000)) +
theme(legend.position = "none") +
coord_fixed()
model
contourData <- ggplot_build(contours)$data[[1]]
combined <- model + geom_path(data = contourData, aes(x = x, y = y, group = group), color = "red", alpha = 0.5)
combined
xRange <- seq(4105, 4125, length = 200)
yRange <- seq(4040, 4060, length = 200)
grid <- expand.grid(x = xRange, y = yRange)
amplitude <- (optimPOI2Par[[4]]-1)/(pi*optimPOI2Par[[3]]^2)
parameters <- c(amplitude, optimPOI2Par)
zPOI2<- Moffat2D(grid, parameters)
zPOI2Matrix <- matrix(zPOI2, nrow = length(xRange), ncol = length(yRange))
par(pty = "s")
image(xRange, yRange, zPOI2Matrix, xlab = "x", ylab = "y", main = "2D Moffat")
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 40)
contours
xRange <- seq(4105, 4125, length = 200)
yRange <- seq(4040, 4060, length = 200)
grid <- expand.grid(x = xRange, y = yRange)
amplitude <- (optimPOI2Par[[4]]-1)/(pi*optimPOI2Par[[3]]^2)
parameters <- c(amplitude, optimPOI2Par)
zPOI2<- Moffat2D(grid, parameters)
zPOI2Matrix <- matrix(zPOI2, nrow = length(xRange), ncol = length(yRange))
par(pty = "s")
image(xRange, yRange, zPOI2Matrix, xlab = "x", ylab = "y", main = "2D Moffat")
contours <- ggplot(data, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 40)
contours
xRange <- seq(4105, 4125, length = 200)
yRange <- seq(4040, 4060, length = 200)
grid <- expand.grid(x = xRange, y = yRange)
amplitude <- (optimPOI2Par[[4]]-1)/(pi*optimPOI2Par[[3]]^2)
parameters <- c(amplitude, optimPOI2Par)
zPOI2<- Moffat2D(grid, parameters)
zPOI2Matrix <- matrix(zPOI2, nrow = length(xRange), ncol = length(yRange))
par(pty = "s")
image(xRange, yRange, zPOI2Matrix, xlab = "x", ylab = "y", main = "2D Moffat")
contours <- ggplot(grid, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 40)
contours
model <- ggplot(POI2, aes(x,y)) +
geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") +
scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(10, 100, 1000)) +
theme(legend.position = "none") +
coord_fixed()
model
contourData <- ggplot_build(contours)$data[[1]]
combined <- model + geom_path(data = contourData, aes(x = x, y = y, group = group), color = "red", alpha = 0.5)
combined
xRange <- seq(4105, 4125, length = 200)
yRange <- seq(4040, 4060, length = 200)
grid <- expand.grid(x = xRange, y = yRange)
amplitude <- (optimPOI2Par[[4]]-1)/(pi*optimPOI2Par[[3]]^2)
parameters <- c(amplitude, optimPOI2Par)
zPOI2<- Moffat2D(grid, parameters)
zPOI2Matrix <- matrix(zPOI2, nrow = length(xRange), ncol = length(yRange))
par(pty = "s")
image(xRange, yRange, zPOI2Matrix, xlab = "x", ylab = "y")
contours <- ggplot(grid, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 40)
contours
model <- ggplot(POI2, aes(x,y)) +
geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") +
scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(10, 100, 1000)) +
theme(legend.position = "none") +
coord_fixed()
model
contourData <- ggplot_build(contours)$data[[1]]
combined <- model + geom_path(data = contourData, aes(x = x, y = y, group = group), color = "red", alpha = 0.5)
combined
xRange <- seq(4105, 4125, length = 200)
yRange <- seq(4040, 4060, length = 200)
grid <- expand.grid(x = xRange, y = yRange)
amplitude <- (optimPOI2Par[[4]]-1)/(pi*optimPOI2Par[[3]]^2)
parameters <- c(amplitude, optimPOI2Par)
zPOI2<- Moffat2D(grid, parameters)
zPOI2Matrix <- matrix(zPOI2, nrow = length(xRange), ncol = length(yRange))
par(pty = "s")
image(xRange, yRange, zPOI2Matrix, xlab = "x", ylab = "y", main = "2D Moffat")
contours <- ggplot(grid, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 40)
contours
model <- ggplot(POI2, aes(x,y)) +
geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") +
scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(10, 100, 1000)) +
theme(legend.position = "none") +
coord_fixed()
model
contourData <- ggplot_build(contours)$data[[1]]
combined <- model + geom_path(data = contourData, aes(x = x, y = y, group = group), color = "red", alpha = 0.5)
combined
xRange <- seq(4105, 4125, length = 200)
yRange <- seq(4040, 4060, length = 200)
grid <- expand.grid(x = xRange, y = yRange)
amplitude <- (optimPOI2Par[[4]]-1)/(pi*optimPOI2Par[[3]]^2)
parameters <- c(amplitude, optimPOI2Par)
zPOI2<- Moffat2D(grid, parameters)
zPOI2Matrix <- matrix(zPOI2, nrow = length(xRange), ncol = length(yRange))
par(pty = "s")
image(xRange, yRange, zPOI2Matrix, xlab = "x", ylab = "y", main = "2D Moffat")
contours <- ggplot(grid, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 20)
contours
model <- ggplot(POI2, aes(x,y)) +
geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") +
scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(10, 100, 1000)) +
theme(legend.position = "none") +
coord_fixed()
model
contourData <- ggplot_build(contours)$data[[1]]
combined <- model + geom_path(data = contourData, aes(x = x, y = y, group = group), color = "red", alpha = 0.5)
combined
xRange <- seq(4105, 4125, length = 200)
yRange <- seq(4040, 4060, length = 200)
grid <- expand.grid(x = xRange, y = yRange)
amplitude <- (optimPOI2Par[[4]]-1)/(pi*optimPOI2Par[[3]]^2)
parameters <- c(amplitude, optimPOI2Par)
zPOI2<- Moffat2D(grid, parameters)
zPOI2Matrix <- matrix(zPOI2, nrow = length(xRange), ncol = length(yRange))
par(pty = "s")
image(xRange, yRange, zPOI2Matrix, xlab = "x", ylab = "y", main = "2D Moffat")
contours <- ggplot(grid, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 40)
contours
model <- ggplot(POI2, aes(x,y)) +
geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") +
scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(10, 100, 1000)) +
theme(legend.position = "none") +
coord_fixed()
model
contourData <- ggplot_build(contours)$data[[1]]
combined <- model + geom_path(data = contourData, aes(x = x, y = y, group = group), color = "red", alpha = 0.5)
combined
margX <- ggplot(dataframeMarginalX) +
geom_line(aes(x = xMids, y = marginalX), col = cbPalette[2]) +
labs(x = "x", y = "Density", main = "Marginal PDF of x")
xRange <- seq(4105, 4125, length = 200)
yRange <- seq(4040, 4060, length = 200)
Rx <- length(xRange) - 1
Ry <- length(yRange) - 1
marginalX <- numeric(length = Rx)
for(i in 1:Rx){
marginalX[i] <- integral2(Moffat2DPDF, xmin = xRange[i], xmax = xRange[i+1], ymin = 4040, ymax = 4060, parameters = optimPOI2Par)[[1]]
}
sum(marginalX) #checking it sums to 1 - expect it to be a little less as it isn't summed over infinite (x,y) plain
marginalY <- numeric(length = Ry)
for(i in 1:Ry){
marginalY[i] <- integral2(Moffat2DPDF, xmin = 4105, xmax = 4125, ymin = yRange[i], ymax = yRange[i+1], parameters = optimPOI2Par)[[1]]
}
sum(marginalY) #checking it sums to 1
xMids <- numeric(length = Rx)
for(i in 1:Rx){
xMids[i] <- (xRange[i]+xRange[i+1])/2
}
yMids <- numeric(length = Ry)
for(i in 1:Ry){
yMids[i] <- (yRange[i]+yRange[i+1])/2
}
dataframeMarginalX <- data.frame(x = xMids, y = marginalX)
dataframeMarginalY <- data.frame(x = yMids, y = marginalY)
plot(dataframeMarginalX, type = "l")
plot(dataframeMarginalY, type = "l")
margX <- ggplot(dataframeMarginalX) +
geom_line(aes(x = xMids, y = marginalX), col = cbPalette[2]) +
labs(x = "x", y = "Density", main = "Marginal PDF of x")
margY <- ggplot(dataframeMarginalY) +
geom_line(aes(x = yMids, y = marginalY), col = cbPalette[2]) +
labs(x = "y", y = "Density", main = "Marginal PDF of y") +
rotate()
histX <- ggplot(POI2, aes(x = x)) +
geom_histogram(aes(y = after_stat(density)), bins = 100, col = cbPalette[3], fill = cbPalette[5])
histY <- ggplot(POI2, aes(x = y)) +
geom_histogram(aes(y = after_stat(density)), bins = 100, col = cbPalette[3], fill = cbPalette[5]) +
rotate()
margX
margY
histX
histY
xRange <- seq(4105, 4125, length = 200)
yRange <- seq(4040, 4060, length = 200)
xMarg <- numeric(length = 200)
for(i in 1:200){
xMarg[i] <- Moffat2DPDF(optimPOI2Par, xRange[i], optimPOI2Par[2])
}
xMargdf <- data.frame(xRange, xMarg)
histogramWithMarginalX <- ggplot(POI2, aes(x = x)) +
geom_histogram(aes(y = after_stat(density)), bins = 250, col = cbPalette[3], fill = cbPalette[5]) +
geom_line(data = xMargdf, aes(x = xRange, y = xMarg), col = cbPalette[2]) +
labs(x = NULL, y = "Density") +
theme(axis.text.x = element_blank(), axis.title.x = element_blank())
histogramWithMarginalX
yMarg <- numeric(length = 200)
for(i in 1:200){
yMarg[i] <- Moffat2DPDF(optimPOI2Par, optimPOI2Par[1], yRange[i])
}
yMargdf <- data.frame(yRange, yMarg)
histogramWithMarginalY <- ggplot(POI2, aes(x = y)) +
geom_histogram(aes(y = after_stat(density)), bins = 250, col = cbPalette[3], fill = cbPalette[5]) +
geom_line(data = yMargdf, aes(x = yRange, y = yMarg), col = cbPalette[2]) +
labs(x = NULL , y = "Density") +
theme(axis.text.y = element_blank(), axis.title.y = element_blank()) +
rotate()
histogramWithMarginalY
plot_grid(histogramWithMarginalX, NULL, combined, histogramWithMarginalY, ncol = 2, align = "hv", rel_widths = c(2, 1), rel_heights = c(1, 2), axis = c("l", "b"))
xRange <- seq(4105, 4125, length = 200)
yRange <- seq(4040, 4060, length = 200)
grid <- expand.grid(x = xRange, y = yRange)
amplitude <- (optimPOI2Par[[4]]-1)/(pi*optimPOI2Par[[3]]^2)
parameters <- c(amplitude, optimPOI2Par)
zPOI2<- Moffat2D(grid, parameters)
zPOI2Matrix <- matrix(zPOI2, nrow = length(xRange), ncol = length(yRange))
par(pty = "s")
image(xRange, yRange, zPOI2Matrix, xlab = "x", ylab = "y", main = "2D Moffat")
contours <- ggplot(grid, aes(x = x, y = y)) +
stat_contour(aes(z = zPOI2), bins = 40)
contours
model <- ggplot(POI2, aes(x,y)) +
geom_pointdensity(adjust = 0.05, size = 0.1, shape = "1") +
scale_color_viridis(direction = -1, option = "B", trans = "log", breaks = c(10, 100, 1000)) +
theme(legend.position = "none")
model
contourData <- ggplot_build(contours)$data[[1]]
combined <- model + geom_path(data = contourData, aes(x = x, y = y, group = group), color = "red", alpha = 0.5)
combined
xRange <- seq(4105, 4125, length = 200)
yRange <- seq(4040, 4060, length = 200)
xMarg <- numeric(length = 200)
for(i in 1:200){
xMarg[i] <- Moffat2DPDF(optimPOI2Par, xRange[i], optimPOI2Par[2])
}
xMargdf <- data.frame(xRange, xMarg)
histogramWithMarginalX <- ggplot(POI2, aes(x = x)) +
geom_histogram(aes(y = after_stat(density)), bins = 250, col = cbPalette[3], fill = cbPalette[5]) +
geom_line(data = xMargdf, aes(x = xRange, y = xMarg), col = cbPalette[2]) +
labs(x = NULL, y = "Density") +
theme(axis.text.x = element_blank(), axis.title.x = element_blank())
histogramWithMarginalX
yMarg <- numeric(length = 200)
for(i in 1:200){
yMarg[i] <- Moffat2DPDF(optimPOI2Par, optimPOI2Par[1], yRange[i])
}
yMargdf <- data.frame(yRange, yMarg)
histogramWithMarginalY <- ggplot(POI2, aes(x = y)) +
geom_histogram(aes(y = after_stat(density)), bins = 250, col = cbPalette[3], fill = cbPalette[5]) +
geom_line(data = yMargdf, aes(x = yRange, y = yMarg), col = cbPalette[2]) +
labs(x = NULL , y = "Density") +
theme(axis.text.y = element_blank(), axis.title.y = element_blank()) +
rotate()
histogramWithMarginalY
plot_grid(histogramWithMarginalX, NULL, combined, histogramWithMarginalY, ncol = 2, align = "hv", rel_widths = c(2, 1), rel_heights = c(1, 2), axis = c("l", "b"))
