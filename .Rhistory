plotdist(line0$x, histo = TRUE, demp = TRUE)
plotdist(line1$x, histo = TRUE, demp = TRUE)
plotdist(line2$x, histo = TRUE, demp = TRUE)
plotdist(line3$x, histo = TRUE, demp = TRUE)
plotdist(line4$x, histo = TRUE, demp = TRUE)
plotdist(line5$x, histo = TRUE, demp = TRUE)
plotdist(line6$x, histo = TRUE, demp = TRUE)
plotdist(lineback$x, histo = TRUE, demp = TRUE)
#Q-Q and P-P plots
l0 <- fitdist(line0$x, "norm")
par(mfrow = c(2,2))
cdfcomp(l0)
denscomp(l0)
qqcomp(l0)
ppcomp(l0)
l1 <- fitdist(line1$x, "norm")
par(mfrow = c(2,2))
cdfcomp(l1)
denscomp(l1)
qqcomp(l1)
ppcomp(l1)
l2 <- fitdist(line2$x, "norm")
par(mfrow = c(2,2))
cdfcomp(l2)
denscomp(l2)
qqcomp(l2)
ppcomp(l2)
l3 <- fitdist(line3$x, "norm")
par(mfrow = c(2,2))
cdfcomp(l3)
denscomp(l3)
qqcomp(l3)
ppcomp(l3)
l4 <- fitdist(line4$x, "norm")
par(mfrow = c(2,2))
cdfcomp(l4)
denscomp(l4)
qqcomp(l4)
ppcomp(l4)
l5 <- fitdist(line5$x, "norm")
par(mfrow = c(2,2))
cdfcomp(l5)
denscomp(l5)
qqcomp(l5)
ppcomp(l5)
l6 <- fitdist(line6$x, "norm")
par(mfrow = c(2,2))
cdfcomp(l6)
denscomp(l6)
qqcomp(l6)
ppcomp(l6)
lb <- fitdist(lineback$x, "unif")
par(mfrow = c(2,2))
cdfcomp(lb)
denscomp(lb)
qqcomp(lb)
ppcomp(lb)
band <- POI2 %>%
filter(y>4048.5 & y< 4055.5)
ggplot() + geom_point(mapping = aes(x,y), data = line0, shape =".") + geom_point(mapping = aes(x,y), data = line1, colour = "red", shape =".") + geom_point(mapping = aes(x,y), data = line2, colour = "blue", shape =".") + geom_point(mapping = aes(x,y), data = line3, shape =".") + geom_point(mapping = aes(x,y), data = line4, colour = "blue", shape =".") + geom_point(mapping = aes(x,y), data = line5, colour = "red", shape =".") + geom_point(mapping = aes(x,y), data = line6, shape =".") + coord_fixed()
#distribution fitting - t
mystart <- list(ncp=4115, df = 1)
l0 <- fitdist(line0$x, "t", start = mystart, method = "mle")
par(mfrow = c(2,2))
cdfcomp(l0)
denscomp(l0)
qqcomp(l0)
ppcomp(l0)
l1 <- fitdist(line1$x, "t", start = mystart, method = "mle")
par(mfrow = c(2,2))
cdfcomp(l1)
denscomp(l1)
qqcomp(l1)
ppcomp(l1)
l2 <- fitdist(line2$x, "t", start = mystart)
#Moffat 1D
#One Dimensional Moffat Model
#Model Formula
#f(x) = A(1+(x-mu)^2/gamma^2)^-alpha
#Parameters
#A = Amplitude
#mu = the x position of the maximum of the model
#gamma = core width of the model
#alpha = power index
#Defaults
#Amplitude = 1
#mu = 0
#gamma = 1
#alpha = 1
dMoffat1D <- function(x, amplitude, mu, gamma, alpha){amplitude*(1+((x-mu)/gamma)^2)^-alpha}
Moffat1D_Deriv <- function(x, amplitude, mu, gamma, alpha){
chain = (1 + (x - mu)^2 / gamma^2)
d_A = chain^(-alpha)
d_mu = 2*amplitude*alpha*(x - mu)*d_A/(chain*gamma^2)
d_gamma = 2*amplitude*alpha*((x - mu)^2)*d_A/(chain*gamma^3)
d_alpha = -amplitude*d_A*log(chain)
return(list(c(d_A, d_mu, d_gamma, d_alpha)))
}
#@staticmethod
#def fit_deriv(x, amplitude, x_0, gamma, alpha):
#"""One dimensional Moffat model derivative with respect to parameters"""
#fac = (1 + (x - x_0) ** 2 / gamma ** 2)
#d_A = fac ** (-alpha)
#d_x_0 = (2 * amplitude * alpha * (x - x_0) * d_A / (fac * gamma ** 2))
#d_gamma = (2 * amplitude * alpha * (x - x_0) ** 2 * d_A /
#           (fac * gamma ** 3))
#d_alpha = -amplitude * d_A * np.log(fac)
#return [d_A, d_x_0, d_gamma, d_alpha]
dMoffat1D(2, 1, 0, 1, 1)
x <- c(-10:10)
plot(dMoffat1D(x, 1, 0, 1, 1), )
plot(dat)
#Generate Random Data
set.seed(6)
dat <- rnorm(1000)
plot(dat)
hist(dat)
Moffat1D_Deriv(x, 1, 0, 1, 1)
Moffat1D_Deriv(dat, 1, 0, 1, 1)
Moffat1D_Deriv(0.5, 1, 0, 1, 1)
set.seed(8)
data <- rgamma(1000, 4, 1)
plot(data)
hist(data)
beta = 2
alpha = 4
Gamma <- function(x, alpha, beta){
((beta^alpha)/factorial(alpha-1))* x^(alpha-1)* exp(-beta*x)
}
#plot(Gamma, 0, 25)
optim(c(1), Gamma, method = "L-BFGS-B", lower = 0)
set.seed(8)
data <- rgamma(1000, 4, 1)
plot(data)
hist(data)
beta = 2
alpha = 4
Gamma <- function(x, alpha, beta){
((beta^alpha)/factorial(alpha-1))* x^(alpha-1)* exp(-beta*x)
}
range <- [0:25]
Gamma <- function(x, alpha, beta){
((beta^alpha)/factorial(alpha-1))* x^(alpha-1)* exp(-beta*x)
}
range <- c(0:25)
plot(Gamma(range, 4, 2))
#plot(Gamma, 0, 25)
optim(c(1), Gamma, method = "L-BFGS-B", lower = 0)
Gamma <- function(x, alpha, beta){
((beta^alpha)/factorial(alpha-1))* x^(alpha-1)* exp(-beta*x)
}
range <- c(0:25)
plot(Gamma(range, 4, 2))
#plot(Gamma, 0, 25)
optim(c(1), Gamma, method = "L-BFGS-B", lower = 0)
set.seed(8)
data <- rgamma(1000, 4, 1)
plot(data)
hist(data)
beta = 2
alpha = 4
Gamma <- function(x, alpha, beta){
((beta^alpha)/factorial(alpha-1))* x^(alpha-1)* exp(-beta*x)
}
range <- c(0:25)
plot(Gamma(range, 4, 2))
#plot(Gamma, 0, 25)
optim(c(1), Gamma, method = "L-BFGS-B", lower = 0)
Gamma <- function(x, alpha, beta){
((beta^alpha)/factorial(alpha-1))* x^(alpha-1)* exp(-beta*x)
}
range <- c(0:25)
plot(Gamma(range, 4, 2))
#plot(Gamma, 0, 25)
optim(c(x, 4, 2), Gamma)
Gamma <- function(x, alpha, beta){
((beta^alpha)/factorial(alpha-1))* x^(alpha-1)* exp(-beta*x)
}
range <- c(0:25)
plot(Gamma(range, 4, 2))
#plot(Gamma, 0, 25)
par <- c(1, 4, 2)
optim(par, Gamma)
Gamma <- function(x, alpha, beta){
((beta^alpha)/factorial(alpha-1))* x^(alpha-1)* exp(-beta*x)
}
range <- c(0:25)
plot(Gamma(range, 4, 2))
plot(Gamma, 0, 25)
Gamma <- function(x, alpha, beta){
((beta^alpha)/factorial(alpha-1))* x^(alpha-1)* exp(-beta*x)
}
range <- c(0:25)
plot(Gamma(range, 4, 2))
#par <- c(1, 4, 2)
#optim(par, Gamma)
Gamma <- function(x, alpha, beta){
((beta^alpha)/factorial(alpha-1))* x^(alpha-1)* exp(-beta*x)
}
range <- c(0:25)
plot(Gamma(range, 4, 2), x <- seq(0, 25, by=0.2))
Gamma <- function(x, alpha, beta){
((beta^alpha)/factorial(alpha-1))* x^(alpha-1)* exp(-beta*x)
}
range <- c(0:25)
plot(Gamma(range, 4, 2), seq(0, 25, by=0.2))
Gamma <- function(x, alpha, beta){
((beta^alpha)/factorial(alpha-1))* x^(alpha-1)* exp(-beta*x)
x <- seq(0,25, by=0.2)
}
range <- c(0:25)
plot(Gamma(range, 4, 2))
#par <- c(1, 4, 2)
#optim(par, Gamma)
Gamma <- function(x, alpha, beta){
((beta^alpha)/factorial(alpha-1))* x^(alpha-1)* exp(-beta*x)
}
range <- c(0:25)
plot(Gamma(range, 4, 2))
#par <- c(1, 4, 2)
#optim(par, Gamma)
Gamma <- function(x, alpha, beta){
((beta^alpha)/factorial(alpha-1))* x^(alpha-1)* exp(-beta*x)
}
range <- c(0:25)
plot(Gamma(range, 4, 2))
geom_histogram(Gamma)
Gamma <- function(x, alpha, beta){
((beta^alpha)/factorial(alpha-1))* x^(alpha-1)* exp(-beta*x)
}
range <- c(0:25)
hist(Gamma(range, 4, 2))
#par <- c(1, 4, 2)
#optim(par, Gamma)
Gamma <- function(x, alpha, beta){
((beta^alpha)/factorial(alpha-1))* x^(alpha-1)* exp(-beta*x)
}
range <- c(0:25)
plot(Gamma(range, 4, 2))
#par <- c(1, 4, 2)
#optim(par, Gamma)
Gamma <- function(x, alpha, beta){
((beta^alpha)/factorial(alpha-1))* x^(alpha-1)* exp(-beta*x)
}
range <- c(0:25)
plot(Gamma(range, 1, 2))
#par <- c(1, 4, 2)
#optim(par, Gamma)
Gamma <- function(x, alpha, beta){
((beta^alpha)/factorial(alpha-1))* x^(alpha-1)* exp(-beta*x)
}
range <- c(0:25)
plot(Gamma(range, 4, 2))
#par <- c(1, 4, 2)
#optim(par, Gamma)
Gamma <- function(x, alpha, beta){
((beta^alpha)/factorial(alpha-1))* x^(alpha-1)* exp(-beta*x)
}
range <- c(0:25)
plot(Gamma(range, 3, 2))
#par <- c(1, 4, 2)
#optim(par, Gamma)
Gamma <- function(x, alpha, beta){
((beta^alpha)/factorial(alpha-1))* x^(alpha-1)* exp(-beta*x)
}
range <- c(0:25)
plot(Gamma(range, 2, 2))
#par <- c(1, 4, 2)
#optim(par, Gamma)
Gamma <- function(x, alpha, beta){
((beta^alpha)/factorial(alpha-1))* x^(alpha-1)* exp(-beta*x)
}
range <- c(0:25)
plot(Gamma(range, 0.5, 2))
#par <- c(1, 4, 2)
#optim(par, Gamma)
Gamma <- function(x, alpha, beta){
((beta^alpha)/factorial(alpha-1))* x^(alpha-1)* exp(-beta*x)
}
range <- c(0:25)
plot(Gamma(range, 1, 2))
#par <- c(1, 4, 2)
#optim(par, Gamma)
Gamma <- function(x, alpha, beta){
((beta^alpha)/factorial(alpha-1))* x^(alpha-1)* exp(-beta*x)
}
range <- c(0:25)
plot(Gamma(range, 0.5, 2))
#par <- c(1, 4, 2)
#optim(par, Gamma)
Gamma <- function(x, alpha, beta){
((beta^alpha)/factorial(alpha-1))* x^(alpha-1)* exp(-beta*x)
}
range <- c(0:25)
plot(Gamma(range, 1, 5))
#par <- c(1, 4, 2)
#optim(par, Gamma)
Gamma <- function(x, alpha, beta){
((beta^alpha)/factorial(alpha-1))* x^(alpha-1)* exp(-beta*x)
}
range <- c(0:25)
plot(Gamma(range, 2, 5))
#par <- c(1, 4, 2)
#optim(par, Gamma)
Gamma <- function(x, alpha, beta){
((beta^alpha)/factorial(alpha-1))* x^(alpha-1)* exp(-beta*x)
}
range <- c(0:25)
plot(Gamma(range, 3, 5))
#par <- c(1, 4, 2)
#optim(par, Gamma)
Gamma <- function(x, alpha, beta){
((beta^alpha)/factorial(alpha-1))* x^(alpha-1)* exp(-beta*x)
}
range <- c(0:25)
plot(Gamma(range, 5, 5))
#par <- c(1, 4, 2)
#optim(par, Gamma)
Gamma <- function(x, alpha, beta){
((beta^alpha)/factorial(alpha-1))* x^(alpha-1)* exp(-beta*x)
}
range <- c(0:25)
plot(Gamma(range, 9, 5))
#par <- c(1, 4, 2)
#optim(par, Gamma)
Gamma <- function(x, alpha, beta){
((beta^alpha)/factorial(alpha-1))* x^(alpha-1)* exp(-beta*x)
}
range <- c(0:25)
plot(Gamma(range, 9, 2))
#par <- c(1, 4, 2)
#optim(par, Gamma)
set.seed(8)
data <- rgamma(1000, 9, 2)
plot(data)
hist(data)
beta = 2
alpha = 9
Gamma(5, 9, 2)
Gamma <- function(x, alpha, beta){
((beta^alpha)/factorial(alpha-1))* x^(alpha-1)* exp(-beta*x)
}
range <- seq(0,25, by=0.5)
plot(Gamma(range, 9, 2))
#par <- c(1, 4, 2)
#optim(par, Gamma)
Gamma <- function(x, alpha, beta){
((beta^alpha)/factorial(alpha-1))* x^(alpha-1)* exp(-beta*x)
}
range <- seq(0,25, by=0.1)
plot(Gamma(range, 9, 2))
#par <- c(1, 4, 2)
#optim(par, Gamma)
Gamma(5, 9, 2)
Gamma <- function(x, alpha, beta){
((beta^alpha)/factorial(alpha-1))* x^(alpha-1)* exp(-beta*x)
}
range <- seq(0,25, by=0.1)
plot(Gamma(range, 9, 2), xlab = )
Gamma(5, 9, 2)
pgamma(5,9,2)
#par <- c(1, 4, 2)
#optim(par, Gamma)
Gamma <- function(x, alpha, beta){
((beta^alpha)/factorial(alpha-1))* x^(alpha-1)* exp(-beta*x)
}
range <- seq(0,25, by=0.1)
plot(Gamma(range, 9, 2), xlab = )
Gamma(5, 9, 2)
qgamma(5, 9, 2)
#par <- c(1, 4, 2)
#optim(par, Gamma)
Gamma <- function(x, alpha, beta){
((beta^alpha)/factorial(alpha-1))* x^(alpha-1)* exp(-beta*x)
}
range <- seq(0,25, by=0.1)
plot(Gamma(range, 9, 2), xlab = )
Gamma(5, 9, 2)
pgamma(5, 9, 2)
#par <- c(1, 4, 2)
#optim(par, Gamma)
Gamma <- function(x, alpha, beta){
((beta^alpha)/factorial(alpha-1))* x^(alpha-1)* exp(-beta*x)
}
range <- seq(0,25, by=0.1)
plot(Gamma(range, 9, 2))
Gamma(5, 9, 2)
pgamma(5, 9, 2)
#par <- c(1, 4, 2)
#optim(par, Gamma)
Gamma <- function(x, alpha, beta){
((beta^alpha)/factorial(alpha-1))* x^(alpha-1)* exp(-beta*x)
}
range <- seq(0,25, by=0.1)
plot(Gamma(range, 9, 2))
Gamma(5, 9, 2)
dgamma(5, 9, 2)
#par <- c(1, 4, 2)
#optim(par, Gamma)
Gamma <- function(x, alpha, beta){
((beta^alpha)/factorial(alpha-1))* x^(alpha-1)* exp(-beta*x)
}
range <- seq(0,25, by=0.1)
plot(Gamma(range, 9, 2), xlim = 25)
Gamma <- function(x, alpha, beta){
((beta^alpha)/factorial(alpha-1))* x^(alpha-1)* exp(-beta*x)
}
range <- seq(0,25, by=0.1)
plot(Gamma(range, 9, 2))
#check
Gamma(5, 9, 2)
dgamma(5, 9, 2)
#par <- c(1, 4, 2)
#optim(par, Gamma)
Gamma <- function(x, alpha, beta){
((beta^alpha)/factorial(alpha-1))* x^(alpha-1)* exp(-beta*x)
}
range <- seq(0,25, by=0.1)
hist(Gamma(range, 9, 2))
#check
Gamma(5, 9, 2)
dgamma(5, 9, 2)
#par <- c(1, 4, 2)
#optim(par, Gamma)
Gamma <- function(x, alpha, beta){
((beta^alpha)/factorial(alpha-1))* x^(alpha-1)* exp(-beta*x)
}
range <- seq(0,25, by=0.1)
plot(Gamma(range, 9, 2))
#check
Gamma(5, 9, 2)
dgamma(5, 9, 2)
#par <- c(1, 4, 2)
#optim(par, Gamma)
line3.1 <- line3 %>%
filter(y>4051.5 & y< 4051.7)
line3.2 <- line3 %>%
filter(y>4051.7 & y< 4051.9)
line3.3 <- line3 %>%
filter(y>4051.9 & y< 4052.1)
line3.4 <- line3 %>%
filter(y>4052.1 & y< 4052.3)
line3.5 <- line3 %>%
filter(y>4052.3 & y< 4052.5)
#Q-Q and P-P plots
l0 <- fitdist(line0$x, "norm")
par(mfrow = c(2,2))
cdfcomp(l0)
denscomp(l0)
qqcomp(l0)
ppcomp(l0)
l1 <- fitdist(line1$x, "norm")
par(mfrow = c(2,2))
cdfcomp(l1)
denscomp(l1)
qqcomp(l1)
ppcomp(l1)
l2 <- fitdist(line2$x, "norm")
par(mfrow = c(2,2))
cdfcomp(l2)
denscomp(l2)
qqcomp(l2)
ppcomp(l2)
l3 <- fitdist(line3$x, "norm")
par(mfrow = c(2,2))
cdfcomp(l3)
denscomp(l3)
qqcomp(l3)
ppcomp(l3)
l4 <- fitdist(line4$x, "norm")
par(mfrow = c(2,2))
cdfcomp(l4)
denscomp(l4)
qqcomp(l4)
ppcomp(l4)
l5 <- fitdist(line5$x, "norm")
par(mfrow = c(2,2))
cdfcomp(l5)
denscomp(l5)
qqcomp(l5)
ppcomp(l5)
l6 <- fitdist(line6$x, "norm")
par(mfrow = c(2,2))
cdfcomp(l6)
denscomp(l6)
qqcomp(l6)
ppcomp(l6)
lb <- fitdist(lineback$x, "unif")
par(mfrow = c(2,2))
cdfcomp(lb)
denscomp(lb)
qqcomp(lb)
ppcomp(lb)
plotdist(line3.3$x, histo = TRUE, demp = TRUE)
Gamma <- function(x, alpha, beta){
((beta^alpha)/factorial(alpha-1))* x^(alpha-1)* exp(-beta*x)
}
range <- seq(0,25, by=0.1)
plot(Gamma(range, 9, 2))
#check
Gamma(5, 9, 2)
dgamma(5, 9, 2)
res <- optim(c(5,9,2), Gamma)
Gamma <- function(x, alpha, beta){
((beta^alpha)/factorial(alpha-1))* x^(alpha-1)* exp(-beta*x)
}
range <- seq(0,25, by=0.1)
plot(Gamma(range, 9, 2))
#check
Gamma(5, 9, 2)
dgamma(5, 9, 2)
#res <- optim(c(5,9,2), Gamma)
